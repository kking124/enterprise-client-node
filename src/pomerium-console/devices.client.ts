// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies
// @generated from protobuf file "devices.proto" (package "pomerium.dashboard", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DeviceService } from "./devices";
import type { ListDeviceTypesResponse } from "./devices";
import type { ListDevicesResponse } from "./devices";
import type { ListDevicesRequest } from "./devices";
import type { DeleteDeviceTypeRequest } from "./devices";
import type { DeleteDeviceRequest } from "./devices";
import type { SetDeviceTypeResponse } from "./devices";
import type { SetDeviceTypeRequest } from "./devices";
import type { CreateDeviceEnrollmentResponse } from "./devices";
import type { CreateDeviceEnrollmentRequest } from "./devices";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "./google/protobuf/empty";
import type { ApproveDeviceRequest } from "./devices";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * DeviceService manages device credentials, enrollments and types
 *
 * @generated from protobuf service pomerium.dashboard.DeviceService
 */
export interface IDeviceServiceClient {
    /**
     * @generated from protobuf rpc: ApproveDevice(pomerium.dashboard.ApproveDeviceRequest) returns (google.protobuf.Empty);
     */
    approveDevice(input: ApproveDeviceRequest, options?: RpcOptions): UnaryCall<ApproveDeviceRequest, Empty>;
    /**
     * @generated from protobuf rpc: CreateDeviceEnrollment(pomerium.dashboard.CreateDeviceEnrollmentRequest) returns (pomerium.dashboard.CreateDeviceEnrollmentResponse);
     */
    createDeviceEnrollment(input: CreateDeviceEnrollmentRequest, options?: RpcOptions): UnaryCall<CreateDeviceEnrollmentRequest, CreateDeviceEnrollmentResponse>;
    /**
     * @generated from protobuf rpc: SetDeviceType(pomerium.dashboard.SetDeviceTypeRequest) returns (pomerium.dashboard.SetDeviceTypeResponse);
     */
    setDeviceType(input: SetDeviceTypeRequest, options?: RpcOptions): UnaryCall<SetDeviceTypeRequest, SetDeviceTypeResponse>;
    /**
     * @generated from protobuf rpc: DeleteDevice(pomerium.dashboard.DeleteDeviceRequest) returns (google.protobuf.Empty);
     */
    deleteDevice(input: DeleteDeviceRequest, options?: RpcOptions): UnaryCall<DeleteDeviceRequest, Empty>;
    /**
     * @generated from protobuf rpc: DeleteDeviceType(pomerium.dashboard.DeleteDeviceTypeRequest) returns (google.protobuf.Empty);
     */
    deleteDeviceType(input: DeleteDeviceTypeRequest, options?: RpcOptions): UnaryCall<DeleteDeviceTypeRequest, Empty>;
    /**
     * @generated from protobuf rpc: ListDevices(pomerium.dashboard.ListDevicesRequest) returns (pomerium.dashboard.ListDevicesResponse);
     */
    listDevices(input: ListDevicesRequest, options?: RpcOptions): UnaryCall<ListDevicesRequest, ListDevicesResponse>;
    /**
     * @generated from protobuf rpc: ListDeviceTypes(google.protobuf.Empty) returns (pomerium.dashboard.ListDeviceTypesResponse);
     */
    listDeviceTypes(input: Empty, options?: RpcOptions): UnaryCall<Empty, ListDeviceTypesResponse>;
}
/**
 * DeviceService manages device credentials, enrollments and types
 *
 * @generated from protobuf service pomerium.dashboard.DeviceService
 */
export class DeviceServiceClient implements IDeviceServiceClient, ServiceInfo {
    typeName = DeviceService.typeName;
    methods = DeviceService.methods;
    options = DeviceService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ApproveDevice(pomerium.dashboard.ApproveDeviceRequest) returns (google.protobuf.Empty);
     */
    approveDevice(input: ApproveDeviceRequest, options?: RpcOptions): UnaryCall<ApproveDeviceRequest, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApproveDeviceRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateDeviceEnrollment(pomerium.dashboard.CreateDeviceEnrollmentRequest) returns (pomerium.dashboard.CreateDeviceEnrollmentResponse);
     */
    createDeviceEnrollment(input: CreateDeviceEnrollmentRequest, options?: RpcOptions): UnaryCall<CreateDeviceEnrollmentRequest, CreateDeviceEnrollmentResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateDeviceEnrollmentRequest, CreateDeviceEnrollmentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetDeviceType(pomerium.dashboard.SetDeviceTypeRequest) returns (pomerium.dashboard.SetDeviceTypeResponse);
     */
    setDeviceType(input: SetDeviceTypeRequest, options?: RpcOptions): UnaryCall<SetDeviceTypeRequest, SetDeviceTypeResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SetDeviceTypeRequest, SetDeviceTypeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteDevice(pomerium.dashboard.DeleteDeviceRequest) returns (google.protobuf.Empty);
     */
    deleteDevice(input: DeleteDeviceRequest, options?: RpcOptions): UnaryCall<DeleteDeviceRequest, Empty> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteDeviceRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteDeviceType(pomerium.dashboard.DeleteDeviceTypeRequest) returns (google.protobuf.Empty);
     */
    deleteDeviceType(input: DeleteDeviceTypeRequest, options?: RpcOptions): UnaryCall<DeleteDeviceTypeRequest, Empty> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteDeviceTypeRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListDevices(pomerium.dashboard.ListDevicesRequest) returns (pomerium.dashboard.ListDevicesResponse);
     */
    listDevices(input: ListDevicesRequest, options?: RpcOptions): UnaryCall<ListDevicesRequest, ListDevicesResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListDevicesRequest, ListDevicesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListDeviceTypes(google.protobuf.Empty) returns (pomerium.dashboard.ListDeviceTypesResponse);
     */
    listDeviceTypes(input: Empty, options?: RpcOptions): UnaryCall<Empty, ListDeviceTypesResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, ListDeviceTypesResponse>("unary", this._transport, method, opt, input);
    }
}
