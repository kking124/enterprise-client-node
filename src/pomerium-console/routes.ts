// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies
// @generated from protobuf file "routes.proto" (package "pomerium.dashboard", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Policy } from "./policy";
import { Cluster } from "./envoy/config/cluster/v3/cluster";
import { Duration } from "./google/protobuf/duration";
import { RedirectAction } from "./envoy/config/route/v3/route_components";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message pomerium.dashboard.RouteRewriteHeader
 */
export interface RouteRewriteHeader {
    /**
     * @generated from protobuf field: string header = 1;
     */
    header: string;
    /**
     * @generated from protobuf oneof: matcher
     */
    matcher: {
        oneofKind: "prefix";
        /**
         * @generated from protobuf field: string prefix = 3;
         */
        prefix: string;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: string value = 2;
     */
    value: string;
}
/**
 * @generated from protobuf message pomerium.dashboard.RouteDirectResponse
 */
export interface RouteDirectResponse {
    /**
     * @generated from protobuf field: uint32 status = 1;
     */
    status: number;
    /**
     * @generated from protobuf field: string body = 2;
     */
    body: string;
}
/**
 * Route defines a proxy route's settings and policy associations
 *
 * @generated from protobuf message pomerium.dashboard.Route
 */
export interface Route {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string namespace_id = 29;
     */
    namespaceId: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp modified_at = 3;
     */
    modifiedAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp deleted_at = 4;
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: string name = 5;
     */
    name: string;
    /**
     * name for prometheus stats, computed on first save
     *
     * @generated from protobuf field: string stat_name = 47;
     */
    statName: string;
    /**
     * @generated from protobuf field: string from = 6;
     */
    from: string;
    /**
     * @generated from protobuf field: repeated string to = 7;
     */
    to: string[];
    /**
     * @generated from protobuf field: envoy.config.route.v3.RedirectAction redirect = 40;
     */
    redirect?: RedirectAction;
    /**
     * @generated from protobuf field: pomerium.dashboard.RouteDirectResponse response = 59;
     */
    response?: RouteDirectResponse;
    /**
     * @generated from protobuf field: optional string prefix = 8;
     */
    prefix?: string;
    /**
     * @generated from protobuf field: optional string path = 9;
     */
    path?: string;
    /**
     * @generated from protobuf field: optional string regex = 10;
     */
    regex?: string;
    /**
     * @generated from protobuf field: optional string prefix_rewrite = 36;
     */
    prefixRewrite?: string;
    /**
     * @generated from protobuf field: optional string regex_rewrite_pattern = 37;
     */
    regexRewritePattern?: string;
    /**
     * @generated from protobuf field: optional string regex_rewrite_substitution = 38;
     */
    regexRewriteSubstitution?: string;
    /**
     * @generated from protobuf field: optional string host_rewrite = 30;
     */
    hostRewrite?: string;
    /**
     * @generated from protobuf field: optional string host_rewrite_header = 31;
     */
    hostRewriteHeader?: string;
    /**
     * @generated from protobuf field: optional string host_path_regex_rewrite_pattern = 32;
     */
    hostPathRegexRewritePattern?: string;
    /**
     * @generated from protobuf field: optional string host_path_regex_rewrite_substitution = 33;
     */
    hostPathRegexRewriteSubstitution?: string;
    /**
     * @generated from protobuf field: optional int64 regex_priority_order = 45;
     */
    regexPriorityOrder?: bigint;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration timeout = 13;
     */
    timeout?: Duration;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration idle_timeout = 48;
     */
    idleTimeout?: Duration;
    /**
     * @generated from protobuf field: optional bool allow_websockets = 14;
     */
    allowWebsockets?: boolean;
    /**
     * @generated from protobuf field: optional bool allow_spdy = 49;
     */
    allowSpdy?: boolean;
    /**
     * @generated from protobuf field: optional bool tls_skip_verify = 15;
     */
    tlsSkipVerify?: boolean;
    /**
     * @generated from protobuf field: optional string tls_upstream_server_name = 51;
     */
    tlsUpstreamServerName?: string;
    /**
     * @generated from protobuf field: optional string tls_downstream_server_name = 52;
     */
    tlsDownstreamServerName?: string;
    /**
     * @generated from protobuf field: optional string tls_custom_ca_key_pair_id = 41;
     */
    tlsCustomCaKeyPairId?: string;
    /**
     * @generated from protobuf field: optional string tls_client_key_pair_id = 42;
     */
    tlsClientKeyPairId?: string;
    /**
     * @generated from protobuf field: optional string tls_downstream_client_ca_key_pair_id = 43;
     */
    tlsDownstreamClientCaKeyPairId?: string;
    /**
     * @generated from protobuf field: optional bool tls_upstream_allow_renegotiation = 55;
     */
    tlsUpstreamAllowRenegotiation?: boolean;
    /**
     * @generated from protobuf field: map<string, string> set_request_headers = 23;
     */
    setRequestHeaders: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: repeated string remove_request_headers = 24;
     */
    removeRequestHeaders: string[];
    /**
     * @generated from protobuf field: map<string, string> set_response_headers = 56;
     */
    setResponseHeaders: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: repeated pomerium.dashboard.RouteRewriteHeader rewrite_response_headers = 44;
     */
    rewriteResponseHeaders: RouteRewriteHeader[];
    /**
     * @generated from protobuf field: optional bool preserve_host_header = 25;
     */
    preserveHostHeader?: boolean;
    /**
     * @generated from protobuf field: optional bool pass_identity_headers = 26;
     */
    passIdentityHeaders?: boolean;
    /**
     * @generated from protobuf field: optional string kubernetes_service_account_token = 27;
     */
    kubernetesServiceAccountToken?: string;
    /**
     * @generated from protobuf field: envoy.config.cluster.v3.Cluster envoy_opts = 39;
     */
    envoyOpts?: Cluster;
    /**
     * @generated from protobuf field: bool enable_google_cloud_serverless_authentication = 46;
     */
    enableGoogleCloudServerlessAuthentication: boolean;
    /**
     * @generated from protobuf field: optional string idp_client_id = 57;
     */
    idpClientId?: string;
    /**
     * @generated from protobuf field: optional string idp_client_secret = 58;
     */
    idpClientSecret?: string;
    /**
     * @generated from protobuf field: bool show_error_details = 53;
     */
    showErrorDetails: boolean;
    /**
     * @generated from protobuf field: string originator_id = 54;
     */
    originatorId: string;
    /**
     * policies applied to this route
     *
     * @generated from protobuf field: repeated string policy_ids = 28;
     */
    policyIds: string[];
    /**
     * computed properties (may be nil)
     *
     * @generated from protobuf field: repeated string policy_names = 34;
     */
    policyNames: string[];
    /**
     * computed
     *
     * @generated from protobuf field: string namespace_name = 35;
     */
    namespaceName: string;
}
/**
 * RouteWithPolicies contains automatically created routes and policies from a
 * LoadRoutesRequest
 *
 * @generated from protobuf message pomerium.dashboard.RouteWithPolicies
 */
export interface RouteWithPolicies {
    /**
     * @generated from protobuf field: pomerium.dashboard.Route route = 1;
     */
    route?: Route;
    /**
     * @generated from protobuf field: repeated pomerium.dashboard.Policy policies = 2;
     */
    policies: Policy[];
}
/**
 * @generated from protobuf message pomerium.dashboard.DeleteRouteRequest
 */
export interface DeleteRouteRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message pomerium.dashboard.DeleteRouteResponse
 */
export interface DeleteRouteResponse {
}
/**
 * @generated from protobuf message pomerium.dashboard.DeleteRoutesRequest
 */
export interface DeleteRoutesRequest {
    /**
     * @generated from protobuf field: repeated string ids = 1;
     */
    ids: string[];
}
/**
 * @generated from protobuf message pomerium.dashboard.DeleteRoutesResponse
 */
export interface DeleteRoutesResponse {
}
/**
 * @generated from protobuf message pomerium.dashboard.GetRouteRequest
 */
export interface GetRouteRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message pomerium.dashboard.GetRouteResponse
 */
export interface GetRouteResponse {
    /**
     * @generated from protobuf field: pomerium.dashboard.Route route = 1;
     */
    route?: Route;
}
/**
 * ListRoutesRequest defines the routes to list
 *
 * @generated from protobuf message pomerium.dashboard.ListRoutesRequest
 */
export interface ListRoutesRequest {
    /**
     * @generated from protobuf field: string namespace = 1;
     */
    namespace: string;
    /**
     * list Routes who's name, from or to contains the query string
     *
     * @generated from protobuf field: optional string query = 2;
     */
    query?: string;
    /**
     * list Routes starting from an offset in the total list
     *
     * @generated from protobuf field: optional int64 offset = 3;
     */
    offset?: bigint;
    /**
     * limit the number of Route entries returned
     *
     * @generated from protobuf field: optional int64 limit = 4;
     */
    limit?: bigint;
    /**
     * sort the Routes by newest, oldest, name or from
     *
     * @generated from protobuf field: optional string order_by = 5;
     */
    orderBy?: string;
}
/**
 * ListRoutesResponse is the list of routes found for a ListRoutesRequest
 *
 * @generated from protobuf message pomerium.dashboard.ListRoutesResponse
 */
export interface ListRoutesResponse {
    /**
     * @generated from protobuf field: repeated pomerium.dashboard.Route routes = 1;
     */
    routes: Route[];
    /**
     * @generated from protobuf field: int64 total_count = 2;
     */
    totalCount: bigint;
}
/**
 * LoadRoutesRequest creates a route based on a yaml payload
 *
 * @generated from protobuf message pomerium.dashboard.LoadRoutesRequest
 */
export interface LoadRoutesRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * OSS pomerium policy block
     *
     * @generated from protobuf field: bytes contents = 2;
     */
    contents: Uint8Array;
}
/**
 * LoadRoutesResponse contains the routes and policies crated from a
 * LoadRoutesRequest
 *
 * @generated from protobuf message pomerium.dashboard.LoadRoutesResponse
 */
export interface LoadRoutesResponse {
    /**
     * @generated from protobuf field: repeated pomerium.dashboard.RouteWithPolicies routes = 1;
     */
    routes: RouteWithPolicies[];
}
/**
 * @generated from protobuf message pomerium.dashboard.SetRouteRequest
 */
export interface SetRouteRequest {
    /**
     * @generated from protobuf field: pomerium.dashboard.Route route = 1;
     */
    route?: Route;
}
/**
 * @generated from protobuf message pomerium.dashboard.SetRouteResponse
 */
export interface SetRouteResponse {
    /**
     * @generated from protobuf field: pomerium.dashboard.Route route = 1;
     */
    route?: Route;
}
/**
 * @generated from protobuf message pomerium.dashboard.SetRoutesRequest
 */
export interface SetRoutesRequest {
    /**
     * @generated from protobuf field: repeated pomerium.dashboard.Route routes = 1;
     */
    routes: Route[];
}
/**
 * @generated from protobuf message pomerium.dashboard.SetRoutesResponse
 */
export interface SetRoutesResponse {
    /**
     * @generated from protobuf field: repeated pomerium.dashboard.Route routes = 1;
     */
    routes: Route[];
}
/**
 * @generated from protobuf message pomerium.dashboard.MoveRoutesRequest
 */
export interface MoveRoutesRequest {
    /**
     * @generated from protobuf field: repeated string route_ids = 1;
     */
    routeIds: string[];
    /**
     * @generated from protobuf field: string new_namespace_id = 2;
     */
    newNamespaceId: string;
}
/**
 * @generated from protobuf message pomerium.dashboard.MoveRoutesResponse
 */
export interface MoveRoutesResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class RouteRewriteHeader$Type extends MessageType<RouteRewriteHeader> {
    constructor() {
        super("pomerium.dashboard.RouteRewriteHeader", [
            { no: 1, name: "header", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "prefix", kind: "scalar", oneof: "matcher", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<RouteRewriteHeader>): RouteRewriteHeader {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.header = "";
        message.matcher = { oneofKind: undefined };
        message.value = "";
        if (value !== undefined)
            reflectionMergePartial<RouteRewriteHeader>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RouteRewriteHeader): RouteRewriteHeader {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string header */ 1:
                    message.header = reader.string();
                    break;
                case /* string prefix */ 3:
                    message.matcher = {
                        oneofKind: "prefix",
                        prefix: reader.string()
                    };
                    break;
                case /* string value */ 2:
                    message.value = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RouteRewriteHeader, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string header = 1; */
        if (message.header !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.header);
        /* string prefix = 3; */
        if (message.matcher.oneofKind === "prefix")
            writer.tag(3, WireType.LengthDelimited).string(message.matcher.prefix);
        /* string value = 2; */
        if (message.value !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.RouteRewriteHeader
 */
export const RouteRewriteHeader = new RouteRewriteHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RouteDirectResponse$Type extends MessageType<RouteDirectResponse> {
    constructor() {
        super("pomerium.dashboard.RouteDirectResponse", [
            { no: 1, name: "status", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "body", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<RouteDirectResponse>): RouteDirectResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.status = 0;
        message.body = "";
        if (value !== undefined)
            reflectionMergePartial<RouteDirectResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RouteDirectResponse): RouteDirectResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 status */ 1:
                    message.status = reader.uint32();
                    break;
                case /* string body */ 2:
                    message.body = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RouteDirectResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 status = 1; */
        if (message.status !== 0)
            writer.tag(1, WireType.Varint).uint32(message.status);
        /* string body = 2; */
        if (message.body !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.body);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.RouteDirectResponse
 */
export const RouteDirectResponse = new RouteDirectResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Route$Type extends MessageType<Route> {
    constructor() {
        super("pomerium.dashboard.Route", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 29, name: "namespace_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "modified_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 47, name: "stat_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "to", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 40, name: "redirect", kind: "message", T: () => RedirectAction },
            { no: 59, name: "response", kind: "message", T: () => RouteDirectResponse },
            { no: 8, name: "prefix", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "path", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "regex", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 36, name: "prefix_rewrite", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 37, name: "regex_rewrite_pattern", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 38, name: "regex_rewrite_substitution", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 30, name: "host_rewrite", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 31, name: "host_rewrite_header", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 32, name: "host_path_regex_rewrite_pattern", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 33, name: "host_path_regex_rewrite_substitution", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 45, name: "regex_priority_order", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "timeout", kind: "message", T: () => Duration },
            { no: 48, name: "idle_timeout", kind: "message", T: () => Duration },
            { no: 14, name: "allow_websockets", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 49, name: "allow_spdy", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "tls_skip_verify", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 51, name: "tls_upstream_server_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 52, name: "tls_downstream_server_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 41, name: "tls_custom_ca_key_pair_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 42, name: "tls_client_key_pair_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 43, name: "tls_downstream_client_ca_key_pair_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 55, name: "tls_upstream_allow_renegotiation", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 23, name: "set_request_headers", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 24, name: "remove_request_headers", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 56, name: "set_response_headers", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 44, name: "rewrite_response_headers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RouteRewriteHeader },
            { no: 25, name: "preserve_host_header", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 26, name: "pass_identity_headers", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 27, name: "kubernetes_service_account_token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 39, name: "envoy_opts", kind: "message", T: () => Cluster },
            { no: 46, name: "enable_google_cloud_serverless_authentication", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 57, name: "idp_client_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 58, name: "idp_client_secret", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 53, name: "show_error_details", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 54, name: "originator_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 28, name: "policy_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 34, name: "policy_names", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 35, name: "namespace_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Route>): Route {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "";
        message.namespaceId = "";
        message.name = "";
        message.statName = "";
        message.from = "";
        message.to = [];
        message.setRequestHeaders = {};
        message.removeRequestHeaders = [];
        message.setResponseHeaders = {};
        message.rewriteResponseHeaders = [];
        message.enableGoogleCloudServerlessAuthentication = false;
        message.showErrorDetails = false;
        message.originatorId = "";
        message.policyIds = [];
        message.policyNames = [];
        message.namespaceName = "";
        if (value !== undefined)
            reflectionMergePartial<Route>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Route): Route {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string namespace_id */ 29:
                    message.namespaceId = reader.string();
                    break;
                case /* google.protobuf.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* google.protobuf.Timestamp modified_at */ 3:
                    message.modifiedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.modifiedAt);
                    break;
                case /* google.protobuf.Timestamp deleted_at */ 4:
                    message.deletedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deletedAt);
                    break;
                case /* string name */ 5:
                    message.name = reader.string();
                    break;
                case /* string stat_name */ 47:
                    message.statName = reader.string();
                    break;
                case /* string from */ 6:
                    message.from = reader.string();
                    break;
                case /* repeated string to */ 7:
                    message.to.push(reader.string());
                    break;
                case /* envoy.config.route.v3.RedirectAction redirect */ 40:
                    message.redirect = RedirectAction.internalBinaryRead(reader, reader.uint32(), options, message.redirect);
                    break;
                case /* pomerium.dashboard.RouteDirectResponse response */ 59:
                    message.response = RouteDirectResponse.internalBinaryRead(reader, reader.uint32(), options, message.response);
                    break;
                case /* optional string prefix */ 8:
                    message.prefix = reader.string();
                    break;
                case /* optional string path */ 9:
                    message.path = reader.string();
                    break;
                case /* optional string regex */ 10:
                    message.regex = reader.string();
                    break;
                case /* optional string prefix_rewrite */ 36:
                    message.prefixRewrite = reader.string();
                    break;
                case /* optional string regex_rewrite_pattern */ 37:
                    message.regexRewritePattern = reader.string();
                    break;
                case /* optional string regex_rewrite_substitution */ 38:
                    message.regexRewriteSubstitution = reader.string();
                    break;
                case /* optional string host_rewrite */ 30:
                    message.hostRewrite = reader.string();
                    break;
                case /* optional string host_rewrite_header */ 31:
                    message.hostRewriteHeader = reader.string();
                    break;
                case /* optional string host_path_regex_rewrite_pattern */ 32:
                    message.hostPathRegexRewritePattern = reader.string();
                    break;
                case /* optional string host_path_regex_rewrite_substitution */ 33:
                    message.hostPathRegexRewriteSubstitution = reader.string();
                    break;
                case /* optional int64 regex_priority_order */ 45:
                    message.regexPriorityOrder = reader.int64().toBigInt();
                    break;
                case /* optional google.protobuf.Duration timeout */ 13:
                    message.timeout = Duration.internalBinaryRead(reader, reader.uint32(), options, message.timeout);
                    break;
                case /* optional google.protobuf.Duration idle_timeout */ 48:
                    message.idleTimeout = Duration.internalBinaryRead(reader, reader.uint32(), options, message.idleTimeout);
                    break;
                case /* optional bool allow_websockets */ 14:
                    message.allowWebsockets = reader.bool();
                    break;
                case /* optional bool allow_spdy */ 49:
                    message.allowSpdy = reader.bool();
                    break;
                case /* optional bool tls_skip_verify */ 15:
                    message.tlsSkipVerify = reader.bool();
                    break;
                case /* optional string tls_upstream_server_name */ 51:
                    message.tlsUpstreamServerName = reader.string();
                    break;
                case /* optional string tls_downstream_server_name */ 52:
                    message.tlsDownstreamServerName = reader.string();
                    break;
                case /* optional string tls_custom_ca_key_pair_id */ 41:
                    message.tlsCustomCaKeyPairId = reader.string();
                    break;
                case /* optional string tls_client_key_pair_id */ 42:
                    message.tlsClientKeyPairId = reader.string();
                    break;
                case /* optional string tls_downstream_client_ca_key_pair_id */ 43:
                    message.tlsDownstreamClientCaKeyPairId = reader.string();
                    break;
                case /* optional bool tls_upstream_allow_renegotiation */ 55:
                    message.tlsUpstreamAllowRenegotiation = reader.bool();
                    break;
                case /* map<string, string> set_request_headers */ 23:
                    this.binaryReadMap23(message.setRequestHeaders, reader, options);
                    break;
                case /* repeated string remove_request_headers */ 24:
                    message.removeRequestHeaders.push(reader.string());
                    break;
                case /* map<string, string> set_response_headers */ 56:
                    this.binaryReadMap56(message.setResponseHeaders, reader, options);
                    break;
                case /* repeated pomerium.dashboard.RouteRewriteHeader rewrite_response_headers */ 44:
                    message.rewriteResponseHeaders.push(RouteRewriteHeader.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional bool preserve_host_header */ 25:
                    message.preserveHostHeader = reader.bool();
                    break;
                case /* optional bool pass_identity_headers */ 26:
                    message.passIdentityHeaders = reader.bool();
                    break;
                case /* optional string kubernetes_service_account_token */ 27:
                    message.kubernetesServiceAccountToken = reader.string();
                    break;
                case /* envoy.config.cluster.v3.Cluster envoy_opts */ 39:
                    message.envoyOpts = Cluster.internalBinaryRead(reader, reader.uint32(), options, message.envoyOpts);
                    break;
                case /* bool enable_google_cloud_serverless_authentication */ 46:
                    message.enableGoogleCloudServerlessAuthentication = reader.bool();
                    break;
                case /* optional string idp_client_id */ 57:
                    message.idpClientId = reader.string();
                    break;
                case /* optional string idp_client_secret */ 58:
                    message.idpClientSecret = reader.string();
                    break;
                case /* bool show_error_details */ 53:
                    message.showErrorDetails = reader.bool();
                    break;
                case /* string originator_id */ 54:
                    message.originatorId = reader.string();
                    break;
                case /* repeated string policy_ids */ 28:
                    message.policyIds.push(reader.string());
                    break;
                case /* repeated string policy_names */ 34:
                    message.policyNames.push(reader.string());
                    break;
                case /* string namespace_name */ 35:
                    message.namespaceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap23(map: Route["setRequestHeaders"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof Route["setRequestHeaders"] | undefined, val: Route["setRequestHeaders"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field pomerium.dashboard.Route.set_request_headers");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    private binaryReadMap56(map: Route["setResponseHeaders"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof Route["setResponseHeaders"] | undefined, val: Route["setResponseHeaders"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field pomerium.dashboard.Route.set_response_headers");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message: Route, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string namespace_id = 29; */
        if (message.namespaceId !== "")
            writer.tag(29, WireType.LengthDelimited).string(message.namespaceId);
        /* google.protobuf.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp modified_at = 3; */
        if (message.modifiedAt)
            Timestamp.internalBinaryWrite(message.modifiedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp deleted_at = 4; */
        if (message.deletedAt)
            Timestamp.internalBinaryWrite(message.deletedAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string name = 5; */
        if (message.name !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.name);
        /* string stat_name = 47; */
        if (message.statName !== "")
            writer.tag(47, WireType.LengthDelimited).string(message.statName);
        /* string from = 6; */
        if (message.from !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.from);
        /* repeated string to = 7; */
        for (let i = 0; i < message.to.length; i++)
            writer.tag(7, WireType.LengthDelimited).string(message.to[i]);
        /* envoy.config.route.v3.RedirectAction redirect = 40; */
        if (message.redirect)
            RedirectAction.internalBinaryWrite(message.redirect, writer.tag(40, WireType.LengthDelimited).fork(), options).join();
        /* pomerium.dashboard.RouteDirectResponse response = 59; */
        if (message.response)
            RouteDirectResponse.internalBinaryWrite(message.response, writer.tag(59, WireType.LengthDelimited).fork(), options).join();
        /* optional string prefix = 8; */
        if (message.prefix !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.prefix);
        /* optional string path = 9; */
        if (message.path !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.path);
        /* optional string regex = 10; */
        if (message.regex !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.regex);
        /* optional string prefix_rewrite = 36; */
        if (message.prefixRewrite !== undefined)
            writer.tag(36, WireType.LengthDelimited).string(message.prefixRewrite);
        /* optional string regex_rewrite_pattern = 37; */
        if (message.regexRewritePattern !== undefined)
            writer.tag(37, WireType.LengthDelimited).string(message.regexRewritePattern);
        /* optional string regex_rewrite_substitution = 38; */
        if (message.regexRewriteSubstitution !== undefined)
            writer.tag(38, WireType.LengthDelimited).string(message.regexRewriteSubstitution);
        /* optional string host_rewrite = 30; */
        if (message.hostRewrite !== undefined)
            writer.tag(30, WireType.LengthDelimited).string(message.hostRewrite);
        /* optional string host_rewrite_header = 31; */
        if (message.hostRewriteHeader !== undefined)
            writer.tag(31, WireType.LengthDelimited).string(message.hostRewriteHeader);
        /* optional string host_path_regex_rewrite_pattern = 32; */
        if (message.hostPathRegexRewritePattern !== undefined)
            writer.tag(32, WireType.LengthDelimited).string(message.hostPathRegexRewritePattern);
        /* optional string host_path_regex_rewrite_substitution = 33; */
        if (message.hostPathRegexRewriteSubstitution !== undefined)
            writer.tag(33, WireType.LengthDelimited).string(message.hostPathRegexRewriteSubstitution);
        /* optional int64 regex_priority_order = 45; */
        if (message.regexPriorityOrder !== undefined)
            writer.tag(45, WireType.Varint).int64(message.regexPriorityOrder);
        /* optional google.protobuf.Duration timeout = 13; */
        if (message.timeout)
            Duration.internalBinaryWrite(message.timeout, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Duration idle_timeout = 48; */
        if (message.idleTimeout)
            Duration.internalBinaryWrite(message.idleTimeout, writer.tag(48, WireType.LengthDelimited).fork(), options).join();
        /* optional bool allow_websockets = 14; */
        if (message.allowWebsockets !== undefined)
            writer.tag(14, WireType.Varint).bool(message.allowWebsockets);
        /* optional bool allow_spdy = 49; */
        if (message.allowSpdy !== undefined)
            writer.tag(49, WireType.Varint).bool(message.allowSpdy);
        /* optional bool tls_skip_verify = 15; */
        if (message.tlsSkipVerify !== undefined)
            writer.tag(15, WireType.Varint).bool(message.tlsSkipVerify);
        /* optional string tls_upstream_server_name = 51; */
        if (message.tlsUpstreamServerName !== undefined)
            writer.tag(51, WireType.LengthDelimited).string(message.tlsUpstreamServerName);
        /* optional string tls_downstream_server_name = 52; */
        if (message.tlsDownstreamServerName !== undefined)
            writer.tag(52, WireType.LengthDelimited).string(message.tlsDownstreamServerName);
        /* optional string tls_custom_ca_key_pair_id = 41; */
        if (message.tlsCustomCaKeyPairId !== undefined)
            writer.tag(41, WireType.LengthDelimited).string(message.tlsCustomCaKeyPairId);
        /* optional string tls_client_key_pair_id = 42; */
        if (message.tlsClientKeyPairId !== undefined)
            writer.tag(42, WireType.LengthDelimited).string(message.tlsClientKeyPairId);
        /* optional string tls_downstream_client_ca_key_pair_id = 43; */
        if (message.tlsDownstreamClientCaKeyPairId !== undefined)
            writer.tag(43, WireType.LengthDelimited).string(message.tlsDownstreamClientCaKeyPairId);
        /* optional bool tls_upstream_allow_renegotiation = 55; */
        if (message.tlsUpstreamAllowRenegotiation !== undefined)
            writer.tag(55, WireType.Varint).bool(message.tlsUpstreamAllowRenegotiation);
        /* map<string, string> set_request_headers = 23; */
        for (let k of globalThis.Object.keys(message.setRequestHeaders))
            writer.tag(23, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.setRequestHeaders[k]).join();
        /* repeated string remove_request_headers = 24; */
        for (let i = 0; i < message.removeRequestHeaders.length; i++)
            writer.tag(24, WireType.LengthDelimited).string(message.removeRequestHeaders[i]);
        /* map<string, string> set_response_headers = 56; */
        for (let k of globalThis.Object.keys(message.setResponseHeaders))
            writer.tag(56, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.setResponseHeaders[k]).join();
        /* repeated pomerium.dashboard.RouteRewriteHeader rewrite_response_headers = 44; */
        for (let i = 0; i < message.rewriteResponseHeaders.length; i++)
            RouteRewriteHeader.internalBinaryWrite(message.rewriteResponseHeaders[i], writer.tag(44, WireType.LengthDelimited).fork(), options).join();
        /* optional bool preserve_host_header = 25; */
        if (message.preserveHostHeader !== undefined)
            writer.tag(25, WireType.Varint).bool(message.preserveHostHeader);
        /* optional bool pass_identity_headers = 26; */
        if (message.passIdentityHeaders !== undefined)
            writer.tag(26, WireType.Varint).bool(message.passIdentityHeaders);
        /* optional string kubernetes_service_account_token = 27; */
        if (message.kubernetesServiceAccountToken !== undefined)
            writer.tag(27, WireType.LengthDelimited).string(message.kubernetesServiceAccountToken);
        /* envoy.config.cluster.v3.Cluster envoy_opts = 39; */
        if (message.envoyOpts)
            Cluster.internalBinaryWrite(message.envoyOpts, writer.tag(39, WireType.LengthDelimited).fork(), options).join();
        /* bool enable_google_cloud_serverless_authentication = 46; */
        if (message.enableGoogleCloudServerlessAuthentication !== false)
            writer.tag(46, WireType.Varint).bool(message.enableGoogleCloudServerlessAuthentication);
        /* optional string idp_client_id = 57; */
        if (message.idpClientId !== undefined)
            writer.tag(57, WireType.LengthDelimited).string(message.idpClientId);
        /* optional string idp_client_secret = 58; */
        if (message.idpClientSecret !== undefined)
            writer.tag(58, WireType.LengthDelimited).string(message.idpClientSecret);
        /* bool show_error_details = 53; */
        if (message.showErrorDetails !== false)
            writer.tag(53, WireType.Varint).bool(message.showErrorDetails);
        /* string originator_id = 54; */
        if (message.originatorId !== "")
            writer.tag(54, WireType.LengthDelimited).string(message.originatorId);
        /* repeated string policy_ids = 28; */
        for (let i = 0; i < message.policyIds.length; i++)
            writer.tag(28, WireType.LengthDelimited).string(message.policyIds[i]);
        /* repeated string policy_names = 34; */
        for (let i = 0; i < message.policyNames.length; i++)
            writer.tag(34, WireType.LengthDelimited).string(message.policyNames[i]);
        /* string namespace_name = 35; */
        if (message.namespaceName !== "")
            writer.tag(35, WireType.LengthDelimited).string(message.namespaceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.Route
 */
export const Route = new Route$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RouteWithPolicies$Type extends MessageType<RouteWithPolicies> {
    constructor() {
        super("pomerium.dashboard.RouteWithPolicies", [
            { no: 1, name: "route", kind: "message", T: () => Route },
            { no: 2, name: "policies", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Policy }
        ]);
    }
    create(value?: PartialMessage<RouteWithPolicies>): RouteWithPolicies {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.policies = [];
        if (value !== undefined)
            reflectionMergePartial<RouteWithPolicies>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RouteWithPolicies): RouteWithPolicies {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.Route route */ 1:
                    message.route = Route.internalBinaryRead(reader, reader.uint32(), options, message.route);
                    break;
                case /* repeated pomerium.dashboard.Policy policies */ 2:
                    message.policies.push(Policy.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RouteWithPolicies, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.Route route = 1; */
        if (message.route)
            Route.internalBinaryWrite(message.route, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated pomerium.dashboard.Policy policies = 2; */
        for (let i = 0; i < message.policies.length; i++)
            Policy.internalBinaryWrite(message.policies[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.RouteWithPolicies
 */
export const RouteWithPolicies = new RouteWithPolicies$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteRouteRequest$Type extends MessageType<DeleteRouteRequest> {
    constructor() {
        super("pomerium.dashboard.DeleteRouteRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DeleteRouteRequest>): DeleteRouteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "";
        if (value !== undefined)
            reflectionMergePartial<DeleteRouteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteRouteRequest): DeleteRouteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteRouteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.DeleteRouteRequest
 */
export const DeleteRouteRequest = new DeleteRouteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteRouteResponse$Type extends MessageType<DeleteRouteResponse> {
    constructor() {
        super("pomerium.dashboard.DeleteRouteResponse", []);
    }
    create(value?: PartialMessage<DeleteRouteResponse>): DeleteRouteResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<DeleteRouteResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteRouteResponse): DeleteRouteResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DeleteRouteResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.DeleteRouteResponse
 */
export const DeleteRouteResponse = new DeleteRouteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteRoutesRequest$Type extends MessageType<DeleteRoutesRequest> {
    constructor() {
        super("pomerium.dashboard.DeleteRoutesRequest", [
            { no: 1, name: "ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DeleteRoutesRequest>): DeleteRoutesRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.ids = [];
        if (value !== undefined)
            reflectionMergePartial<DeleteRoutesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteRoutesRequest): DeleteRoutesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ids */ 1:
                    message.ids.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteRoutesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string ids = 1; */
        for (let i = 0; i < message.ids.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.ids[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.DeleteRoutesRequest
 */
export const DeleteRoutesRequest = new DeleteRoutesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteRoutesResponse$Type extends MessageType<DeleteRoutesResponse> {
    constructor() {
        super("pomerium.dashboard.DeleteRoutesResponse", []);
    }
    create(value?: PartialMessage<DeleteRoutesResponse>): DeleteRoutesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<DeleteRoutesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteRoutesResponse): DeleteRoutesResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DeleteRoutesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.DeleteRoutesResponse
 */
export const DeleteRoutesResponse = new DeleteRoutesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRouteRequest$Type extends MessageType<GetRouteRequest> {
    constructor() {
        super("pomerium.dashboard.GetRouteRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetRouteRequest>): GetRouteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "";
        if (value !== undefined)
            reflectionMergePartial<GetRouteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetRouteRequest): GetRouteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetRouteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetRouteRequest
 */
export const GetRouteRequest = new GetRouteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRouteResponse$Type extends MessageType<GetRouteResponse> {
    constructor() {
        super("pomerium.dashboard.GetRouteResponse", [
            { no: 1, name: "route", kind: "message", T: () => Route }
        ]);
    }
    create(value?: PartialMessage<GetRouteResponse>): GetRouteResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetRouteResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetRouteResponse): GetRouteResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.Route route */ 1:
                    message.route = Route.internalBinaryRead(reader, reader.uint32(), options, message.route);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetRouteResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.Route route = 1; */
        if (message.route)
            Route.internalBinaryWrite(message.route, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetRouteResponse
 */
export const GetRouteResponse = new GetRouteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListRoutesRequest$Type extends MessageType<ListRoutesRequest> {
    constructor() {
        super("pomerium.dashboard.ListRoutesRequest", [
            { no: 1, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "query", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "offset", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "limit", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "order_by", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListRoutesRequest>): ListRoutesRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.namespace = "";
        if (value !== undefined)
            reflectionMergePartial<ListRoutesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListRoutesRequest): ListRoutesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string namespace */ 1:
                    message.namespace = reader.string();
                    break;
                case /* optional string query */ 2:
                    message.query = reader.string();
                    break;
                case /* optional int64 offset */ 3:
                    message.offset = reader.int64().toBigInt();
                    break;
                case /* optional int64 limit */ 4:
                    message.limit = reader.int64().toBigInt();
                    break;
                case /* optional string order_by */ 5:
                    message.orderBy = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListRoutesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string namespace = 1; */
        if (message.namespace !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.namespace);
        /* optional string query = 2; */
        if (message.query !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.query);
        /* optional int64 offset = 3; */
        if (message.offset !== undefined)
            writer.tag(3, WireType.Varint).int64(message.offset);
        /* optional int64 limit = 4; */
        if (message.limit !== undefined)
            writer.tag(4, WireType.Varint).int64(message.limit);
        /* optional string order_by = 5; */
        if (message.orderBy !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.orderBy);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListRoutesRequest
 */
export const ListRoutesRequest = new ListRoutesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListRoutesResponse$Type extends MessageType<ListRoutesResponse> {
    constructor() {
        super("pomerium.dashboard.ListRoutesResponse", [
            { no: 1, name: "routes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Route },
            { no: 2, name: "total_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ListRoutesResponse>): ListRoutesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.routes = [];
        message.totalCount = 0n;
        if (value !== undefined)
            reflectionMergePartial<ListRoutesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListRoutesResponse): ListRoutesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated pomerium.dashboard.Route routes */ 1:
                    message.routes.push(Route.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 total_count */ 2:
                    message.totalCount = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListRoutesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated pomerium.dashboard.Route routes = 1; */
        for (let i = 0; i < message.routes.length; i++)
            Route.internalBinaryWrite(message.routes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 total_count = 2; */
        if (message.totalCount !== 0n)
            writer.tag(2, WireType.Varint).int64(message.totalCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListRoutesResponse
 */
export const ListRoutesResponse = new ListRoutesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadRoutesRequest$Type extends MessageType<LoadRoutesRequest> {
    constructor() {
        super("pomerium.dashboard.LoadRoutesRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "contents", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<LoadRoutesRequest>): LoadRoutesRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.contents = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial<LoadRoutesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadRoutesRequest): LoadRoutesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* bytes contents */ 2:
                    message.contents = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadRoutesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* bytes contents = 2; */
        if (message.contents.length)
            writer.tag(2, WireType.LengthDelimited).bytes(message.contents);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.LoadRoutesRequest
 */
export const LoadRoutesRequest = new LoadRoutesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadRoutesResponse$Type extends MessageType<LoadRoutesResponse> {
    constructor() {
        super("pomerium.dashboard.LoadRoutesResponse", [
            { no: 1, name: "routes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RouteWithPolicies }
        ]);
    }
    create(value?: PartialMessage<LoadRoutesResponse>): LoadRoutesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.routes = [];
        if (value !== undefined)
            reflectionMergePartial<LoadRoutesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoadRoutesResponse): LoadRoutesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated pomerium.dashboard.RouteWithPolicies routes */ 1:
                    message.routes.push(RouteWithPolicies.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoadRoutesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated pomerium.dashboard.RouteWithPolicies routes = 1; */
        for (let i = 0; i < message.routes.length; i++)
            RouteWithPolicies.internalBinaryWrite(message.routes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.LoadRoutesResponse
 */
export const LoadRoutesResponse = new LoadRoutesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetRouteRequest$Type extends MessageType<SetRouteRequest> {
    constructor() {
        super("pomerium.dashboard.SetRouteRequest", [
            { no: 1, name: "route", kind: "message", T: () => Route }
        ]);
    }
    create(value?: PartialMessage<SetRouteRequest>): SetRouteRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SetRouteRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetRouteRequest): SetRouteRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.Route route */ 1:
                    message.route = Route.internalBinaryRead(reader, reader.uint32(), options, message.route);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetRouteRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.Route route = 1; */
        if (message.route)
            Route.internalBinaryWrite(message.route, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.SetRouteRequest
 */
export const SetRouteRequest = new SetRouteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetRouteResponse$Type extends MessageType<SetRouteResponse> {
    constructor() {
        super("pomerium.dashboard.SetRouteResponse", [
            { no: 1, name: "route", kind: "message", T: () => Route }
        ]);
    }
    create(value?: PartialMessage<SetRouteResponse>): SetRouteResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SetRouteResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetRouteResponse): SetRouteResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.Route route */ 1:
                    message.route = Route.internalBinaryRead(reader, reader.uint32(), options, message.route);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetRouteResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.Route route = 1; */
        if (message.route)
            Route.internalBinaryWrite(message.route, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.SetRouteResponse
 */
export const SetRouteResponse = new SetRouteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetRoutesRequest$Type extends MessageType<SetRoutesRequest> {
    constructor() {
        super("pomerium.dashboard.SetRoutesRequest", [
            { no: 1, name: "routes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Route }
        ]);
    }
    create(value?: PartialMessage<SetRoutesRequest>): SetRoutesRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.routes = [];
        if (value !== undefined)
            reflectionMergePartial<SetRoutesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetRoutesRequest): SetRoutesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated pomerium.dashboard.Route routes */ 1:
                    message.routes.push(Route.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetRoutesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated pomerium.dashboard.Route routes = 1; */
        for (let i = 0; i < message.routes.length; i++)
            Route.internalBinaryWrite(message.routes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.SetRoutesRequest
 */
export const SetRoutesRequest = new SetRoutesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetRoutesResponse$Type extends MessageType<SetRoutesResponse> {
    constructor() {
        super("pomerium.dashboard.SetRoutesResponse", [
            { no: 1, name: "routes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Route }
        ]);
    }
    create(value?: PartialMessage<SetRoutesResponse>): SetRoutesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.routes = [];
        if (value !== undefined)
            reflectionMergePartial<SetRoutesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetRoutesResponse): SetRoutesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated pomerium.dashboard.Route routes */ 1:
                    message.routes.push(Route.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetRoutesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated pomerium.dashboard.Route routes = 1; */
        for (let i = 0; i < message.routes.length; i++)
            Route.internalBinaryWrite(message.routes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.SetRoutesResponse
 */
export const SetRoutesResponse = new SetRoutesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MoveRoutesRequest$Type extends MessageType<MoveRoutesRequest> {
    constructor() {
        super("pomerium.dashboard.MoveRoutesRequest", [
            { no: 1, name: "route_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "new_namespace_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<MoveRoutesRequest>): MoveRoutesRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.routeIds = [];
        message.newNamespaceId = "";
        if (value !== undefined)
            reflectionMergePartial<MoveRoutesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MoveRoutesRequest): MoveRoutesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string route_ids */ 1:
                    message.routeIds.push(reader.string());
                    break;
                case /* string new_namespace_id */ 2:
                    message.newNamespaceId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MoveRoutesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string route_ids = 1; */
        for (let i = 0; i < message.routeIds.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.routeIds[i]);
        /* string new_namespace_id = 2; */
        if (message.newNamespaceId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.newNamespaceId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.MoveRoutesRequest
 */
export const MoveRoutesRequest = new MoveRoutesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MoveRoutesResponse$Type extends MessageType<MoveRoutesResponse> {
    constructor() {
        super("pomerium.dashboard.MoveRoutesResponse", []);
    }
    create(value?: PartialMessage<MoveRoutesResponse>): MoveRoutesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<MoveRoutesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MoveRoutesResponse): MoveRoutesResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: MoveRoutesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.MoveRoutesResponse
 */
export const MoveRoutesResponse = new MoveRoutesResponse$Type();
/**
 * @generated ServiceType for protobuf service pomerium.dashboard.RouteService
 */
export const RouteService = new ServiceType("pomerium.dashboard.RouteService", [
    { name: "DeleteRoute", options: {}, I: DeleteRouteRequest, O: DeleteRouteResponse },
    { name: "DeleteRoutes", options: {}, I: DeleteRoutesRequest, O: DeleteRoutesResponse },
    { name: "GetRoute", options: {}, I: GetRouteRequest, O: GetRouteResponse },
    { name: "ListRoutes", options: {}, I: ListRoutesRequest, O: ListRoutesResponse },
    { name: "LoadRoutes", options: {}, I: LoadRoutesRequest, O: LoadRoutesResponse },
    { name: "SetRoute", options: {}, I: SetRouteRequest, O: SetRouteResponse },
    { name: "SetRoutes", options: {}, I: SetRoutesRequest, O: SetRoutesResponse },
    { name: "MoveRoutes", options: {}, I: MoveRoutesRequest, O: MoveRoutesResponse }
]);
