// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies
// @generated from protobuf file "audit_svc.proto" (package "pomerium.dashboard", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AuditService } from "./audit_svc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { DecryptAuditRecordsResponse } from "./audit_svc";
import type { DecryptAuditRecordsRequest } from "./audit_svc";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service pomerium.dashboard.AuditService
 */
export interface IAuditServiceClient {
    /**
     * @generated from protobuf rpc: DecryptAuditRecords(pomerium.dashboard.DecryptAuditRecordsRequest) returns (pomerium.dashboard.DecryptAuditRecordsResponse);
     */
    decryptAuditRecords(input: DecryptAuditRecordsRequest, options?: RpcOptions): UnaryCall<DecryptAuditRecordsRequest, DecryptAuditRecordsResponse>;
}
/**
 * @generated from protobuf service pomerium.dashboard.AuditService
 */
export class AuditServiceClient implements IAuditServiceClient, ServiceInfo {
    typeName = AuditService.typeName;
    methods = AuditService.methods;
    options = AuditService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: DecryptAuditRecords(pomerium.dashboard.DecryptAuditRecordsRequest) returns (pomerium.dashboard.DecryptAuditRecordsResponse);
     */
    decryptAuditRecords(input: DecryptAuditRecordsRequest, options?: RpcOptions): UnaryCall<DecryptAuditRecordsRequest, DecryptAuditRecordsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<DecryptAuditRecordsRequest, DecryptAuditRecordsResponse>("unary", this._transport, method, opt, input);
    }
}
