// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies
// @generated from protobuf file "settings.proto" (package "pomerium.dashboard", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Struct } from "./google/protobuf/struct";
import { Duration } from "./google/protobuf/duration";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message pomerium.dashboard.ConsoleSettings
 */
export interface ConsoleSettings {
    /**
     * @generated from protobuf field: bool enable_feedback_widget = 1;
     */
    enableFeedbackWidget: boolean;
}
/**
 * Settings defines the global pomerium settings
 * Next id: 85.
 *
 * @generated from protobuf message pomerium.dashboard.Settings
 */
export interface Settings {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp modified_at = 1;
     */
    modifiedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional string installation_id = 68;
     */
    installationId?: string;
    /**
     * @generated from protobuf field: optional string log_level = 3;
     */
    logLevel?: string;
    /**
     * @generated from protobuf field: optional string proxy_log_level = 4;
     */
    proxyLogLevel?: string;
    /**
     * @generated from protobuf field: optional string shared_secret = 5;
     */
    sharedSecret?: string;
    /**
     * @generated from protobuf field: optional string services = 6;
     */
    services?: string;
    /**
     * @generated from protobuf field: optional string address = 7;
     */
    address?: string;
    /**
     * @generated from protobuf field: optional bool insecure_server = 8;
     */
    insecureServer?: boolean;
    /**
     * @generated from protobuf field: optional string dns_lookup_family = 60;
     */
    dnsLookupFamily?: string;
    /**
     * @generated from protobuf field: repeated pomerium.dashboard.Settings.Certificate certificates = 9;
     */
    certificates: Settings_Certificate[];
    /**
     * @generated from protobuf field: optional string http_redirect_addr = 10;
     */
    httpRedirectAddr?: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration timeout_read = 11;
     */
    timeoutRead?: Duration;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration timeout_write = 12;
     */
    timeoutWrite?: Duration;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration timeout_idle = 13;
     */
    timeoutIdle?: Duration;
    /**
     * @generated from protobuf field: optional string authenticate_service_url = 14;
     */
    authenticateServiceUrl?: string;
    /**
     * @generated from protobuf field: optional string authenticate_callback_path = 15;
     */
    authenticateCallbackPath?: string;
    /**
     * @generated from protobuf field: optional string cookie_name = 16;
     */
    cookieName?: string;
    /**
     * @generated from protobuf field: optional string cookie_secret = 17;
     */
    cookieSecret?: string;
    /**
     * @generated from protobuf field: optional string cookie_domain = 18;
     */
    cookieDomain?: string;
    /**
     * @generated from protobuf field: optional bool cookie_secure = 19;
     */
    cookieSecure?: boolean;
    /**
     * @generated from protobuf field: optional bool cookie_http_only = 20;
     */
    cookieHttpOnly?: boolean;
    /**
     * @generated from protobuf field: optional string cookie_same_site = 80;
     */
    cookieSameSite?: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration cookie_expire = 21;
     */
    cookieExpire?: Duration;
    /**
     * @generated from protobuf field: optional string idp_client_id = 22;
     */
    idpClientId?: string;
    /**
     * @generated from protobuf field: optional string idp_client_secret = 23;
     */
    idpClientSecret?: string;
    /**
     * @generated from protobuf field: optional string idp_provider = 24;
     */
    idpProvider?: string;
    /**
     * @generated from protobuf field: optional string idp_provider_url = 25;
     */
    idpProviderUrl?: string;
    /**
     * @generated from protobuf field: repeated string scopes = 26;
     */
    scopes: string[];
    /**
     * @generated from protobuf field: optional string idp_service_account = 27;
     */
    idpServiceAccount?: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration idp_refresh_directory_timeout = 28;
     */
    idpRefreshDirectoryTimeout?: Duration;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration idp_refresh_directory_interval = 29;
     */
    idpRefreshDirectoryInterval?: Duration;
    /**
     * @generated from protobuf field: map<string, string> request_params = 30;
     */
    requestParams: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: optional string authorize_service_url = 32;
     */
    authorizeServiceUrl?: string;
    /**
     * @generated from protobuf field: optional string certificate_authority = 34;
     */
    certificateAuthority?: string;
    /**
     * @generated from protobuf field: optional string certificate_authority_file = 35;
     */
    certificateAuthorityFile?: string;
    /**
     * @generated from protobuf field: optional string certificate_authority_key_pair_id = 64;
     */
    certificateAuthorityKeyPairId?: string;
    /**
     * @generated from protobuf field: map<string, string> set_response_headers = 67;
     */
    setResponseHeaders: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: map<string, string> jwt_claims_headers = 66;
     */
    jwtClaimsHeaders: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: optional google.protobuf.Duration default_upstream_timeout = 39;
     */
    defaultUpstreamTimeout?: Duration;
    /**
     * @generated from protobuf field: optional string metrics_address = 40;
     */
    metricsAddress?: string;
    /**
     * @generated from protobuf field: optional string tracing_provider = 41;
     */
    tracingProvider?: string;
    /**
     * @generated from protobuf field: optional double tracing_sample_rate = 42;
     */
    tracingSampleRate?: number;
    /**
     * @generated from protobuf field: optional string tracing_datadog_address = 81;
     */
    tracingDatadogAddress?: string;
    /**
     * @generated from protobuf field: optional string tracing_jaeger_collector_endpoint = 43;
     */
    tracingJaegerCollectorEndpoint?: string;
    /**
     * @generated from protobuf field: optional string tracing_jaeger_agent_endpoint = 44;
     */
    tracingJaegerAgentEndpoint?: string;
    /**
     * @generated from protobuf field: optional string tracing_zipkin_endpoint = 45;
     */
    tracingZipkinEndpoint?: string;
    /**
     * @generated from protobuf field: optional string grpc_address = 46;
     */
    grpcAddress?: string;
    /**
     * @generated from protobuf field: optional bool grpc_insecure = 47;
     */
    grpcInsecure?: boolean;
    /**
     * @generated from protobuf field: optional string cache_service_url = 51;
     */
    cacheServiceUrl?: string;
    /**
     * @generated from protobuf field: optional string databroker_service_url = 52;
     */
    databrokerServiceUrl?: string;
    /**
     * @generated from protobuf field: optional string client_ca = 53;
     */
    clientCa?: string;
    /**
     * @generated from protobuf field: optional string client_ca_file = 54;
     */
    clientCaFile?: string;
    /**
     * @generated from protobuf field: optional string client_ca_key_pair_id = 65;
     */
    clientCaKeyPairId?: string;
    /**
     * @generated from protobuf field: optional string google_cloud_serverless_authentication_service_account = 55;
     */
    googleCloudServerlessAuthenticationServiceAccount?: string;
    /**
     * @generated from protobuf field: optional bool autocert = 56;
     */
    autocert?: boolean;
    /**
     * @generated from protobuf field: optional bool autocert_use_staging = 57;
     */
    autocertUseStaging?: boolean;
    /**
     * @generated from protobuf field: optional bool autocert_must_staple = 58;
     */
    autocertMustStaple?: boolean;
    /**
     * @generated from protobuf field: optional string autocert_dir = 59;
     */
    autocertDir?: string;
    /**
     * @generated from protobuf field: optional bool skip_xff_append = 63;
     */
    skipXffAppend?: boolean;
    /**
     * @generated from protobuf field: optional string primary_color = 69;
     */
    primaryColor?: string;
    /**
     * @generated from protobuf field: optional string secondary_color = 70;
     */
    secondaryColor?: string;
    /**
     * @generated from protobuf field: optional string darkmode_primary_color = 71;
     */
    darkmodePrimaryColor?: string;
    /**
     * @generated from protobuf field: optional string darkmode_secondary_color = 72;
     */
    darkmodeSecondaryColor?: string;
    /**
     * @generated from protobuf field: optional string logo_url = 73;
     */
    logoUrl?: string;
    /**
     * @generated from protobuf field: optional string favicon_url = 74;
     */
    faviconUrl?: string;
    /**
     * @generated from protobuf field: optional string error_message_first_paragraph = 75;
     */
    errorMessageFirstParagraph?: string;
    /**
     * @generated from protobuf field: optional string identity_provider = 76;
     */
    identityProvider?: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Struct identity_provider_options = 77;
     */
    identityProviderOptions?: Struct;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration identity_provider_refresh_interval = 78;
     */
    identityProviderRefreshInterval?: Duration;
    /**
     * @generated from protobuf field: optional google.protobuf.Duration identity_provider_refresh_timeout = 79;
     */
    identityProviderRefreshTimeout?: Duration;
    /**
     * @generated from protobuf field: optional pomerium.dashboard.Settings.StringList access_log_fields = 82;
     */
    accessLogFields?: Settings_StringList;
    /**
     * @generated from protobuf field: optional pomerium.dashboard.Settings.StringList authorize_log_fields = 83;
     */
    authorizeLogFields?: Settings_StringList;
    /**
     * @generated from protobuf field: optional bool pass_identity_headers = 84;
     */
    passIdentityHeaders?: boolean;
}
/**
 * @generated from protobuf message pomerium.dashboard.Settings.Certificate
 */
export interface Settings_Certificate {
    /**
     * @generated from protobuf field: bytes cert_bytes = 3;
     */
    certBytes: Uint8Array;
    /**
     * @generated from protobuf field: bytes key_bytes = 4;
     */
    keyBytes: Uint8Array;
    /**
     * @generated from protobuf field: string key_pair_id = 5;
     */
    keyPairId: string;
}
/**
 * @generated from protobuf message pomerium.dashboard.Settings.StringList
 */
export interface Settings_StringList {
    /**
     * @generated from protobuf field: repeated string values = 1;
     */
    values: string[];
}
/**
 * @generated from protobuf message pomerium.dashboard.GetConsoleSettingsRequest
 */
export interface GetConsoleSettingsRequest {
}
/**
 * @generated from protobuf message pomerium.dashboard.GetConsoleSettingsResponse
 */
export interface GetConsoleSettingsResponse {
    /**
     * @generated from protobuf field: pomerium.dashboard.ConsoleSettings console_settings = 1;
     */
    consoleSettings?: ConsoleSettings;
}
/**
 * @generated from protobuf message pomerium.dashboard.GetSettingsRequest
 */
export interface GetSettingsRequest {
}
/**
 * @generated from protobuf message pomerium.dashboard.GetSettingsResponse
 */
export interface GetSettingsResponse {
    /**
     * @generated from protobuf field: pomerium.dashboard.Settings settings = 1;
     */
    settings?: Settings;
}
/**
 * @generated from protobuf message pomerium.dashboard.SetSettingsRequest
 */
export interface SetSettingsRequest {
    /**
     * @generated from protobuf field: pomerium.dashboard.Settings settings = 1;
     */
    settings?: Settings;
}
/**
 * @generated from protobuf message pomerium.dashboard.SetSettingsResponse
 */
export interface SetSettingsResponse {
    /**
     * @generated from protobuf field: pomerium.dashboard.Settings settings = 1;
     */
    settings?: Settings;
}
// @generated message type with reflection information, may provide speed optimized methods
class ConsoleSettings$Type extends MessageType<ConsoleSettings> {
    constructor() {
        super("pomerium.dashboard.ConsoleSettings", [
            { no: 1, name: "enable_feedback_widget", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ConsoleSettings>): ConsoleSettings {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.enableFeedbackWidget = false;
        if (value !== undefined)
            reflectionMergePartial<ConsoleSettings>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConsoleSettings): ConsoleSettings {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool enable_feedback_widget */ 1:
                    message.enableFeedbackWidget = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ConsoleSettings, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool enable_feedback_widget = 1; */
        if (message.enableFeedbackWidget !== false)
            writer.tag(1, WireType.Varint).bool(message.enableFeedbackWidget);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ConsoleSettings
 */
export const ConsoleSettings = new ConsoleSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settings$Type extends MessageType<Settings> {
    constructor() {
        super("pomerium.dashboard.Settings", [
            { no: 1, name: "modified_at", kind: "message", T: () => Timestamp },
            { no: 68, name: "installation_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "log_level", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "proxy_log_level", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "shared_secret", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "services", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "address", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "insecure_server", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 60, name: "dns_lookup_family", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "certificates", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Settings_Certificate },
            { no: 10, name: "http_redirect_addr", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "timeout_read", kind: "message", T: () => Duration },
            { no: 12, name: "timeout_write", kind: "message", T: () => Duration },
            { no: 13, name: "timeout_idle", kind: "message", T: () => Duration },
            { no: 14, name: "authenticate_service_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "authenticate_callback_path", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "cookie_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "cookie_secret", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "cookie_domain", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "cookie_secure", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 20, name: "cookie_http_only", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 80, name: "cookie_same_site", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "cookie_expire", kind: "message", T: () => Duration },
            { no: 22, name: "idp_client_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 23, name: "idp_client_secret", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 24, name: "idp_provider", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "idp_provider_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 26, name: "scopes", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 27, name: "idp_service_account", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 28, name: "idp_refresh_directory_timeout", kind: "message", T: () => Duration },
            { no: 29, name: "idp_refresh_directory_interval", kind: "message", T: () => Duration },
            { no: 30, name: "request_params", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 32, name: "authorize_service_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 34, name: "certificate_authority", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 35, name: "certificate_authority_file", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 64, name: "certificate_authority_key_pair_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 67, name: "set_response_headers", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 66, name: "jwt_claims_headers", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 39, name: "default_upstream_timeout", kind: "message", T: () => Duration },
            { no: 40, name: "metrics_address", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 41, name: "tracing_provider", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 42, name: "tracing_sample_rate", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 81, name: "tracing_datadog_address", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 43, name: "tracing_jaeger_collector_endpoint", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 44, name: "tracing_jaeger_agent_endpoint", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 45, name: "tracing_zipkin_endpoint", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 46, name: "grpc_address", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 47, name: "grpc_insecure", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 51, name: "cache_service_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 52, name: "databroker_service_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 53, name: "client_ca", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 54, name: "client_ca_file", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 65, name: "client_ca_key_pair_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 55, name: "google_cloud_serverless_authentication_service_account", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 56, name: "autocert", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 57, name: "autocert_use_staging", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 58, name: "autocert_must_staple", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 59, name: "autocert_dir", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 63, name: "skip_xff_append", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 69, name: "primary_color", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 70, name: "secondary_color", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 71, name: "darkmode_primary_color", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 72, name: "darkmode_secondary_color", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 73, name: "logo_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 74, name: "favicon_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 75, name: "error_message_first_paragraph", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 76, name: "identity_provider", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 77, name: "identity_provider_options", kind: "message", T: () => Struct },
            { no: 78, name: "identity_provider_refresh_interval", kind: "message", T: () => Duration },
            { no: 79, name: "identity_provider_refresh_timeout", kind: "message", T: () => Duration },
            { no: 82, name: "access_log_fields", kind: "message", T: () => Settings_StringList },
            { no: 83, name: "authorize_log_fields", kind: "message", T: () => Settings_StringList },
            { no: 84, name: "pass_identity_headers", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<Settings>): Settings {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.certificates = [];
        message.scopes = [];
        message.requestParams = {};
        message.setResponseHeaders = {};
        message.jwtClaimsHeaders = {};
        if (value !== undefined)
            reflectionMergePartial<Settings>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settings): Settings {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Timestamp modified_at */ 1:
                    message.modifiedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.modifiedAt);
                    break;
                case /* optional string installation_id */ 68:
                    message.installationId = reader.string();
                    break;
                case /* optional string log_level */ 3:
                    message.logLevel = reader.string();
                    break;
                case /* optional string proxy_log_level */ 4:
                    message.proxyLogLevel = reader.string();
                    break;
                case /* optional string shared_secret */ 5:
                    message.sharedSecret = reader.string();
                    break;
                case /* optional string services */ 6:
                    message.services = reader.string();
                    break;
                case /* optional string address */ 7:
                    message.address = reader.string();
                    break;
                case /* optional bool insecure_server */ 8:
                    message.insecureServer = reader.bool();
                    break;
                case /* optional string dns_lookup_family */ 60:
                    message.dnsLookupFamily = reader.string();
                    break;
                case /* repeated pomerium.dashboard.Settings.Certificate certificates */ 9:
                    message.certificates.push(Settings_Certificate.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional string http_redirect_addr */ 10:
                    message.httpRedirectAddr = reader.string();
                    break;
                case /* optional google.protobuf.Duration timeout_read */ 11:
                    message.timeoutRead = Duration.internalBinaryRead(reader, reader.uint32(), options, message.timeoutRead);
                    break;
                case /* optional google.protobuf.Duration timeout_write */ 12:
                    message.timeoutWrite = Duration.internalBinaryRead(reader, reader.uint32(), options, message.timeoutWrite);
                    break;
                case /* optional google.protobuf.Duration timeout_idle */ 13:
                    message.timeoutIdle = Duration.internalBinaryRead(reader, reader.uint32(), options, message.timeoutIdle);
                    break;
                case /* optional string authenticate_service_url */ 14:
                    message.authenticateServiceUrl = reader.string();
                    break;
                case /* optional string authenticate_callback_path */ 15:
                    message.authenticateCallbackPath = reader.string();
                    break;
                case /* optional string cookie_name */ 16:
                    message.cookieName = reader.string();
                    break;
                case /* optional string cookie_secret */ 17:
                    message.cookieSecret = reader.string();
                    break;
                case /* optional string cookie_domain */ 18:
                    message.cookieDomain = reader.string();
                    break;
                case /* optional bool cookie_secure */ 19:
                    message.cookieSecure = reader.bool();
                    break;
                case /* optional bool cookie_http_only */ 20:
                    message.cookieHttpOnly = reader.bool();
                    break;
                case /* optional string cookie_same_site */ 80:
                    message.cookieSameSite = reader.string();
                    break;
                case /* optional google.protobuf.Duration cookie_expire */ 21:
                    message.cookieExpire = Duration.internalBinaryRead(reader, reader.uint32(), options, message.cookieExpire);
                    break;
                case /* optional string idp_client_id */ 22:
                    message.idpClientId = reader.string();
                    break;
                case /* optional string idp_client_secret */ 23:
                    message.idpClientSecret = reader.string();
                    break;
                case /* optional string idp_provider */ 24:
                    message.idpProvider = reader.string();
                    break;
                case /* optional string idp_provider_url */ 25:
                    message.idpProviderUrl = reader.string();
                    break;
                case /* repeated string scopes */ 26:
                    message.scopes.push(reader.string());
                    break;
                case /* optional string idp_service_account */ 27:
                    message.idpServiceAccount = reader.string();
                    break;
                case /* optional google.protobuf.Duration idp_refresh_directory_timeout */ 28:
                    message.idpRefreshDirectoryTimeout = Duration.internalBinaryRead(reader, reader.uint32(), options, message.idpRefreshDirectoryTimeout);
                    break;
                case /* optional google.protobuf.Duration idp_refresh_directory_interval */ 29:
                    message.idpRefreshDirectoryInterval = Duration.internalBinaryRead(reader, reader.uint32(), options, message.idpRefreshDirectoryInterval);
                    break;
                case /* map<string, string> request_params */ 30:
                    this.binaryReadMap30(message.requestParams, reader, options);
                    break;
                case /* optional string authorize_service_url */ 32:
                    message.authorizeServiceUrl = reader.string();
                    break;
                case /* optional string certificate_authority */ 34:
                    message.certificateAuthority = reader.string();
                    break;
                case /* optional string certificate_authority_file */ 35:
                    message.certificateAuthorityFile = reader.string();
                    break;
                case /* optional string certificate_authority_key_pair_id */ 64:
                    message.certificateAuthorityKeyPairId = reader.string();
                    break;
                case /* map<string, string> set_response_headers */ 67:
                    this.binaryReadMap67(message.setResponseHeaders, reader, options);
                    break;
                case /* map<string, string> jwt_claims_headers */ 66:
                    this.binaryReadMap66(message.jwtClaimsHeaders, reader, options);
                    break;
                case /* optional google.protobuf.Duration default_upstream_timeout */ 39:
                    message.defaultUpstreamTimeout = Duration.internalBinaryRead(reader, reader.uint32(), options, message.defaultUpstreamTimeout);
                    break;
                case /* optional string metrics_address */ 40:
                    message.metricsAddress = reader.string();
                    break;
                case /* optional string tracing_provider */ 41:
                    message.tracingProvider = reader.string();
                    break;
                case /* optional double tracing_sample_rate */ 42:
                    message.tracingSampleRate = reader.double();
                    break;
                case /* optional string tracing_datadog_address */ 81:
                    message.tracingDatadogAddress = reader.string();
                    break;
                case /* optional string tracing_jaeger_collector_endpoint */ 43:
                    message.tracingJaegerCollectorEndpoint = reader.string();
                    break;
                case /* optional string tracing_jaeger_agent_endpoint */ 44:
                    message.tracingJaegerAgentEndpoint = reader.string();
                    break;
                case /* optional string tracing_zipkin_endpoint */ 45:
                    message.tracingZipkinEndpoint = reader.string();
                    break;
                case /* optional string grpc_address */ 46:
                    message.grpcAddress = reader.string();
                    break;
                case /* optional bool grpc_insecure */ 47:
                    message.grpcInsecure = reader.bool();
                    break;
                case /* optional string cache_service_url */ 51:
                    message.cacheServiceUrl = reader.string();
                    break;
                case /* optional string databroker_service_url */ 52:
                    message.databrokerServiceUrl = reader.string();
                    break;
                case /* optional string client_ca */ 53:
                    message.clientCa = reader.string();
                    break;
                case /* optional string client_ca_file */ 54:
                    message.clientCaFile = reader.string();
                    break;
                case /* optional string client_ca_key_pair_id */ 65:
                    message.clientCaKeyPairId = reader.string();
                    break;
                case /* optional string google_cloud_serverless_authentication_service_account */ 55:
                    message.googleCloudServerlessAuthenticationServiceAccount = reader.string();
                    break;
                case /* optional bool autocert */ 56:
                    message.autocert = reader.bool();
                    break;
                case /* optional bool autocert_use_staging */ 57:
                    message.autocertUseStaging = reader.bool();
                    break;
                case /* optional bool autocert_must_staple */ 58:
                    message.autocertMustStaple = reader.bool();
                    break;
                case /* optional string autocert_dir */ 59:
                    message.autocertDir = reader.string();
                    break;
                case /* optional bool skip_xff_append */ 63:
                    message.skipXffAppend = reader.bool();
                    break;
                case /* optional string primary_color */ 69:
                    message.primaryColor = reader.string();
                    break;
                case /* optional string secondary_color */ 70:
                    message.secondaryColor = reader.string();
                    break;
                case /* optional string darkmode_primary_color */ 71:
                    message.darkmodePrimaryColor = reader.string();
                    break;
                case /* optional string darkmode_secondary_color */ 72:
                    message.darkmodeSecondaryColor = reader.string();
                    break;
                case /* optional string logo_url */ 73:
                    message.logoUrl = reader.string();
                    break;
                case /* optional string favicon_url */ 74:
                    message.faviconUrl = reader.string();
                    break;
                case /* optional string error_message_first_paragraph */ 75:
                    message.errorMessageFirstParagraph = reader.string();
                    break;
                case /* optional string identity_provider */ 76:
                    message.identityProvider = reader.string();
                    break;
                case /* optional google.protobuf.Struct identity_provider_options */ 77:
                    message.identityProviderOptions = Struct.internalBinaryRead(reader, reader.uint32(), options, message.identityProviderOptions);
                    break;
                case /* optional google.protobuf.Duration identity_provider_refresh_interval */ 78:
                    message.identityProviderRefreshInterval = Duration.internalBinaryRead(reader, reader.uint32(), options, message.identityProviderRefreshInterval);
                    break;
                case /* optional google.protobuf.Duration identity_provider_refresh_timeout */ 79:
                    message.identityProviderRefreshTimeout = Duration.internalBinaryRead(reader, reader.uint32(), options, message.identityProviderRefreshTimeout);
                    break;
                case /* optional pomerium.dashboard.Settings.StringList access_log_fields */ 82:
                    message.accessLogFields = Settings_StringList.internalBinaryRead(reader, reader.uint32(), options, message.accessLogFields);
                    break;
                case /* optional pomerium.dashboard.Settings.StringList authorize_log_fields */ 83:
                    message.authorizeLogFields = Settings_StringList.internalBinaryRead(reader, reader.uint32(), options, message.authorizeLogFields);
                    break;
                case /* optional bool pass_identity_headers */ 84:
                    message.passIdentityHeaders = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap30(map: Settings["requestParams"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof Settings["requestParams"] | undefined, val: Settings["requestParams"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field pomerium.dashboard.Settings.request_params");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    private binaryReadMap67(map: Settings["setResponseHeaders"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof Settings["setResponseHeaders"] | undefined, val: Settings["setResponseHeaders"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field pomerium.dashboard.Settings.set_response_headers");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    private binaryReadMap66(map: Settings["jwtClaimsHeaders"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof Settings["jwtClaimsHeaders"] | undefined, val: Settings["jwtClaimsHeaders"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field pomerium.dashboard.Settings.jwt_claims_headers");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message: Settings, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Timestamp modified_at = 1; */
        if (message.modifiedAt)
            Timestamp.internalBinaryWrite(message.modifiedAt, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional string installation_id = 68; */
        if (message.installationId !== undefined)
            writer.tag(68, WireType.LengthDelimited).string(message.installationId);
        /* optional string log_level = 3; */
        if (message.logLevel !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.logLevel);
        /* optional string proxy_log_level = 4; */
        if (message.proxyLogLevel !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.proxyLogLevel);
        /* optional string shared_secret = 5; */
        if (message.sharedSecret !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.sharedSecret);
        /* optional string services = 6; */
        if (message.services !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.services);
        /* optional string address = 7; */
        if (message.address !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.address);
        /* optional bool insecure_server = 8; */
        if (message.insecureServer !== undefined)
            writer.tag(8, WireType.Varint).bool(message.insecureServer);
        /* optional string dns_lookup_family = 60; */
        if (message.dnsLookupFamily !== undefined)
            writer.tag(60, WireType.LengthDelimited).string(message.dnsLookupFamily);
        /* repeated pomerium.dashboard.Settings.Certificate certificates = 9; */
        for (let i = 0; i < message.certificates.length; i++)
            Settings_Certificate.internalBinaryWrite(message.certificates[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional string http_redirect_addr = 10; */
        if (message.httpRedirectAddr !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.httpRedirectAddr);
        /* optional google.protobuf.Duration timeout_read = 11; */
        if (message.timeoutRead)
            Duration.internalBinaryWrite(message.timeoutRead, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Duration timeout_write = 12; */
        if (message.timeoutWrite)
            Duration.internalBinaryWrite(message.timeoutWrite, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Duration timeout_idle = 13; */
        if (message.timeoutIdle)
            Duration.internalBinaryWrite(message.timeoutIdle, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional string authenticate_service_url = 14; */
        if (message.authenticateServiceUrl !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.authenticateServiceUrl);
        /* optional string authenticate_callback_path = 15; */
        if (message.authenticateCallbackPath !== undefined)
            writer.tag(15, WireType.LengthDelimited).string(message.authenticateCallbackPath);
        /* optional string cookie_name = 16; */
        if (message.cookieName !== undefined)
            writer.tag(16, WireType.LengthDelimited).string(message.cookieName);
        /* optional string cookie_secret = 17; */
        if (message.cookieSecret !== undefined)
            writer.tag(17, WireType.LengthDelimited).string(message.cookieSecret);
        /* optional string cookie_domain = 18; */
        if (message.cookieDomain !== undefined)
            writer.tag(18, WireType.LengthDelimited).string(message.cookieDomain);
        /* optional bool cookie_secure = 19; */
        if (message.cookieSecure !== undefined)
            writer.tag(19, WireType.Varint).bool(message.cookieSecure);
        /* optional bool cookie_http_only = 20; */
        if (message.cookieHttpOnly !== undefined)
            writer.tag(20, WireType.Varint).bool(message.cookieHttpOnly);
        /* optional string cookie_same_site = 80; */
        if (message.cookieSameSite !== undefined)
            writer.tag(80, WireType.LengthDelimited).string(message.cookieSameSite);
        /* optional google.protobuf.Duration cookie_expire = 21; */
        if (message.cookieExpire)
            Duration.internalBinaryWrite(message.cookieExpire, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* optional string idp_client_id = 22; */
        if (message.idpClientId !== undefined)
            writer.tag(22, WireType.LengthDelimited).string(message.idpClientId);
        /* optional string idp_client_secret = 23; */
        if (message.idpClientSecret !== undefined)
            writer.tag(23, WireType.LengthDelimited).string(message.idpClientSecret);
        /* optional string idp_provider = 24; */
        if (message.idpProvider !== undefined)
            writer.tag(24, WireType.LengthDelimited).string(message.idpProvider);
        /* optional string idp_provider_url = 25; */
        if (message.idpProviderUrl !== undefined)
            writer.tag(25, WireType.LengthDelimited).string(message.idpProviderUrl);
        /* repeated string scopes = 26; */
        for (let i = 0; i < message.scopes.length; i++)
            writer.tag(26, WireType.LengthDelimited).string(message.scopes[i]);
        /* optional string idp_service_account = 27; */
        if (message.idpServiceAccount !== undefined)
            writer.tag(27, WireType.LengthDelimited).string(message.idpServiceAccount);
        /* optional google.protobuf.Duration idp_refresh_directory_timeout = 28; */
        if (message.idpRefreshDirectoryTimeout)
            Duration.internalBinaryWrite(message.idpRefreshDirectoryTimeout, writer.tag(28, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Duration idp_refresh_directory_interval = 29; */
        if (message.idpRefreshDirectoryInterval)
            Duration.internalBinaryWrite(message.idpRefreshDirectoryInterval, writer.tag(29, WireType.LengthDelimited).fork(), options).join();
        /* map<string, string> request_params = 30; */
        for (let k of globalThis.Object.keys(message.requestParams))
            writer.tag(30, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.requestParams[k]).join();
        /* optional string authorize_service_url = 32; */
        if (message.authorizeServiceUrl !== undefined)
            writer.tag(32, WireType.LengthDelimited).string(message.authorizeServiceUrl);
        /* optional string certificate_authority = 34; */
        if (message.certificateAuthority !== undefined)
            writer.tag(34, WireType.LengthDelimited).string(message.certificateAuthority);
        /* optional string certificate_authority_file = 35; */
        if (message.certificateAuthorityFile !== undefined)
            writer.tag(35, WireType.LengthDelimited).string(message.certificateAuthorityFile);
        /* optional string certificate_authority_key_pair_id = 64; */
        if (message.certificateAuthorityKeyPairId !== undefined)
            writer.tag(64, WireType.LengthDelimited).string(message.certificateAuthorityKeyPairId);
        /* map<string, string> set_response_headers = 67; */
        for (let k of globalThis.Object.keys(message.setResponseHeaders))
            writer.tag(67, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.setResponseHeaders[k]).join();
        /* map<string, string> jwt_claims_headers = 66; */
        for (let k of globalThis.Object.keys(message.jwtClaimsHeaders))
            writer.tag(66, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.jwtClaimsHeaders[k]).join();
        /* optional google.protobuf.Duration default_upstream_timeout = 39; */
        if (message.defaultUpstreamTimeout)
            Duration.internalBinaryWrite(message.defaultUpstreamTimeout, writer.tag(39, WireType.LengthDelimited).fork(), options).join();
        /* optional string metrics_address = 40; */
        if (message.metricsAddress !== undefined)
            writer.tag(40, WireType.LengthDelimited).string(message.metricsAddress);
        /* optional string tracing_provider = 41; */
        if (message.tracingProvider !== undefined)
            writer.tag(41, WireType.LengthDelimited).string(message.tracingProvider);
        /* optional double tracing_sample_rate = 42; */
        if (message.tracingSampleRate !== undefined)
            writer.tag(42, WireType.Bit64).double(message.tracingSampleRate);
        /* optional string tracing_datadog_address = 81; */
        if (message.tracingDatadogAddress !== undefined)
            writer.tag(81, WireType.LengthDelimited).string(message.tracingDatadogAddress);
        /* optional string tracing_jaeger_collector_endpoint = 43; */
        if (message.tracingJaegerCollectorEndpoint !== undefined)
            writer.tag(43, WireType.LengthDelimited).string(message.tracingJaegerCollectorEndpoint);
        /* optional string tracing_jaeger_agent_endpoint = 44; */
        if (message.tracingJaegerAgentEndpoint !== undefined)
            writer.tag(44, WireType.LengthDelimited).string(message.tracingJaegerAgentEndpoint);
        /* optional string tracing_zipkin_endpoint = 45; */
        if (message.tracingZipkinEndpoint !== undefined)
            writer.tag(45, WireType.LengthDelimited).string(message.tracingZipkinEndpoint);
        /* optional string grpc_address = 46; */
        if (message.grpcAddress !== undefined)
            writer.tag(46, WireType.LengthDelimited).string(message.grpcAddress);
        /* optional bool grpc_insecure = 47; */
        if (message.grpcInsecure !== undefined)
            writer.tag(47, WireType.Varint).bool(message.grpcInsecure);
        /* optional string cache_service_url = 51; */
        if (message.cacheServiceUrl !== undefined)
            writer.tag(51, WireType.LengthDelimited).string(message.cacheServiceUrl);
        /* optional string databroker_service_url = 52; */
        if (message.databrokerServiceUrl !== undefined)
            writer.tag(52, WireType.LengthDelimited).string(message.databrokerServiceUrl);
        /* optional string client_ca = 53; */
        if (message.clientCa !== undefined)
            writer.tag(53, WireType.LengthDelimited).string(message.clientCa);
        /* optional string client_ca_file = 54; */
        if (message.clientCaFile !== undefined)
            writer.tag(54, WireType.LengthDelimited).string(message.clientCaFile);
        /* optional string client_ca_key_pair_id = 65; */
        if (message.clientCaKeyPairId !== undefined)
            writer.tag(65, WireType.LengthDelimited).string(message.clientCaKeyPairId);
        /* optional string google_cloud_serverless_authentication_service_account = 55; */
        if (message.googleCloudServerlessAuthenticationServiceAccount !== undefined)
            writer.tag(55, WireType.LengthDelimited).string(message.googleCloudServerlessAuthenticationServiceAccount);
        /* optional bool autocert = 56; */
        if (message.autocert !== undefined)
            writer.tag(56, WireType.Varint).bool(message.autocert);
        /* optional bool autocert_use_staging = 57; */
        if (message.autocertUseStaging !== undefined)
            writer.tag(57, WireType.Varint).bool(message.autocertUseStaging);
        /* optional bool autocert_must_staple = 58; */
        if (message.autocertMustStaple !== undefined)
            writer.tag(58, WireType.Varint).bool(message.autocertMustStaple);
        /* optional string autocert_dir = 59; */
        if (message.autocertDir !== undefined)
            writer.tag(59, WireType.LengthDelimited).string(message.autocertDir);
        /* optional bool skip_xff_append = 63; */
        if (message.skipXffAppend !== undefined)
            writer.tag(63, WireType.Varint).bool(message.skipXffAppend);
        /* optional string primary_color = 69; */
        if (message.primaryColor !== undefined)
            writer.tag(69, WireType.LengthDelimited).string(message.primaryColor);
        /* optional string secondary_color = 70; */
        if (message.secondaryColor !== undefined)
            writer.tag(70, WireType.LengthDelimited).string(message.secondaryColor);
        /* optional string darkmode_primary_color = 71; */
        if (message.darkmodePrimaryColor !== undefined)
            writer.tag(71, WireType.LengthDelimited).string(message.darkmodePrimaryColor);
        /* optional string darkmode_secondary_color = 72; */
        if (message.darkmodeSecondaryColor !== undefined)
            writer.tag(72, WireType.LengthDelimited).string(message.darkmodeSecondaryColor);
        /* optional string logo_url = 73; */
        if (message.logoUrl !== undefined)
            writer.tag(73, WireType.LengthDelimited).string(message.logoUrl);
        /* optional string favicon_url = 74; */
        if (message.faviconUrl !== undefined)
            writer.tag(74, WireType.LengthDelimited).string(message.faviconUrl);
        /* optional string error_message_first_paragraph = 75; */
        if (message.errorMessageFirstParagraph !== undefined)
            writer.tag(75, WireType.LengthDelimited).string(message.errorMessageFirstParagraph);
        /* optional string identity_provider = 76; */
        if (message.identityProvider !== undefined)
            writer.tag(76, WireType.LengthDelimited).string(message.identityProvider);
        /* optional google.protobuf.Struct identity_provider_options = 77; */
        if (message.identityProviderOptions)
            Struct.internalBinaryWrite(message.identityProviderOptions, writer.tag(77, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Duration identity_provider_refresh_interval = 78; */
        if (message.identityProviderRefreshInterval)
            Duration.internalBinaryWrite(message.identityProviderRefreshInterval, writer.tag(78, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Duration identity_provider_refresh_timeout = 79; */
        if (message.identityProviderRefreshTimeout)
            Duration.internalBinaryWrite(message.identityProviderRefreshTimeout, writer.tag(79, WireType.LengthDelimited).fork(), options).join();
        /* optional pomerium.dashboard.Settings.StringList access_log_fields = 82; */
        if (message.accessLogFields)
            Settings_StringList.internalBinaryWrite(message.accessLogFields, writer.tag(82, WireType.LengthDelimited).fork(), options).join();
        /* optional pomerium.dashboard.Settings.StringList authorize_log_fields = 83; */
        if (message.authorizeLogFields)
            Settings_StringList.internalBinaryWrite(message.authorizeLogFields, writer.tag(83, WireType.LengthDelimited).fork(), options).join();
        /* optional bool pass_identity_headers = 84; */
        if (message.passIdentityHeaders !== undefined)
            writer.tag(84, WireType.Varint).bool(message.passIdentityHeaders);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.Settings
 */
export const Settings = new Settings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settings_Certificate$Type extends MessageType<Settings_Certificate> {
    constructor() {
        super("pomerium.dashboard.Settings.Certificate", [
            { no: 3, name: "cert_bytes", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 4, name: "key_bytes", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 5, name: "key_pair_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Settings_Certificate>): Settings_Certificate {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.certBytes = new Uint8Array(0);
        message.keyBytes = new Uint8Array(0);
        message.keyPairId = "";
        if (value !== undefined)
            reflectionMergePartial<Settings_Certificate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settings_Certificate): Settings_Certificate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes cert_bytes */ 3:
                    message.certBytes = reader.bytes();
                    break;
                case /* bytes key_bytes */ 4:
                    message.keyBytes = reader.bytes();
                    break;
                case /* string key_pair_id */ 5:
                    message.keyPairId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Settings_Certificate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bytes cert_bytes = 3; */
        if (message.certBytes.length)
            writer.tag(3, WireType.LengthDelimited).bytes(message.certBytes);
        /* bytes key_bytes = 4; */
        if (message.keyBytes.length)
            writer.tag(4, WireType.LengthDelimited).bytes(message.keyBytes);
        /* string key_pair_id = 5; */
        if (message.keyPairId !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.keyPairId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.Settings.Certificate
 */
export const Settings_Certificate = new Settings_Certificate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Settings_StringList$Type extends MessageType<Settings_StringList> {
    constructor() {
        super("pomerium.dashboard.Settings.StringList", [
            { no: 1, name: "values", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Settings_StringList>): Settings_StringList {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.values = [];
        if (value !== undefined)
            reflectionMergePartial<Settings_StringList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Settings_StringList): Settings_StringList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string values */ 1:
                    message.values.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Settings_StringList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string values = 1; */
        for (let i = 0; i < message.values.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.values[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.Settings.StringList
 */
export const Settings_StringList = new Settings_StringList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetConsoleSettingsRequest$Type extends MessageType<GetConsoleSettingsRequest> {
    constructor() {
        super("pomerium.dashboard.GetConsoleSettingsRequest", []);
    }
    create(value?: PartialMessage<GetConsoleSettingsRequest>): GetConsoleSettingsRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetConsoleSettingsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetConsoleSettingsRequest): GetConsoleSettingsRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetConsoleSettingsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetConsoleSettingsRequest
 */
export const GetConsoleSettingsRequest = new GetConsoleSettingsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetConsoleSettingsResponse$Type extends MessageType<GetConsoleSettingsResponse> {
    constructor() {
        super("pomerium.dashboard.GetConsoleSettingsResponse", [
            { no: 1, name: "console_settings", kind: "message", T: () => ConsoleSettings }
        ]);
    }
    create(value?: PartialMessage<GetConsoleSettingsResponse>): GetConsoleSettingsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetConsoleSettingsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetConsoleSettingsResponse): GetConsoleSettingsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.ConsoleSettings console_settings */ 1:
                    message.consoleSettings = ConsoleSettings.internalBinaryRead(reader, reader.uint32(), options, message.consoleSettings);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetConsoleSettingsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.ConsoleSettings console_settings = 1; */
        if (message.consoleSettings)
            ConsoleSettings.internalBinaryWrite(message.consoleSettings, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetConsoleSettingsResponse
 */
export const GetConsoleSettingsResponse = new GetConsoleSettingsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSettingsRequest$Type extends MessageType<GetSettingsRequest> {
    constructor() {
        super("pomerium.dashboard.GetSettingsRequest", []);
    }
    create(value?: PartialMessage<GetSettingsRequest>): GetSettingsRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetSettingsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetSettingsRequest): GetSettingsRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetSettingsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetSettingsRequest
 */
export const GetSettingsRequest = new GetSettingsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSettingsResponse$Type extends MessageType<GetSettingsResponse> {
    constructor() {
        super("pomerium.dashboard.GetSettingsResponse", [
            { no: 1, name: "settings", kind: "message", T: () => Settings }
        ]);
    }
    create(value?: PartialMessage<GetSettingsResponse>): GetSettingsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetSettingsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetSettingsResponse): GetSettingsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.Settings settings */ 1:
                    message.settings = Settings.internalBinaryRead(reader, reader.uint32(), options, message.settings);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetSettingsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.Settings settings = 1; */
        if (message.settings)
            Settings.internalBinaryWrite(message.settings, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetSettingsResponse
 */
export const GetSettingsResponse = new GetSettingsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetSettingsRequest$Type extends MessageType<SetSettingsRequest> {
    constructor() {
        super("pomerium.dashboard.SetSettingsRequest", [
            { no: 1, name: "settings", kind: "message", T: () => Settings }
        ]);
    }
    create(value?: PartialMessage<SetSettingsRequest>): SetSettingsRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SetSettingsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetSettingsRequest): SetSettingsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.Settings settings */ 1:
                    message.settings = Settings.internalBinaryRead(reader, reader.uint32(), options, message.settings);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetSettingsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.Settings settings = 1; */
        if (message.settings)
            Settings.internalBinaryWrite(message.settings, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.SetSettingsRequest
 */
export const SetSettingsRequest = new SetSettingsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetSettingsResponse$Type extends MessageType<SetSettingsResponse> {
    constructor() {
        super("pomerium.dashboard.SetSettingsResponse", [
            { no: 1, name: "settings", kind: "message", T: () => Settings }
        ]);
    }
    create(value?: PartialMessage<SetSettingsResponse>): SetSettingsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SetSettingsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetSettingsResponse): SetSettingsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.Settings settings */ 1:
                    message.settings = Settings.internalBinaryRead(reader, reader.uint32(), options, message.settings);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetSettingsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.Settings settings = 1; */
        if (message.settings)
            Settings.internalBinaryWrite(message.settings, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.SetSettingsResponse
 */
export const SetSettingsResponse = new SetSettingsResponse$Type();
/**
 * @generated ServiceType for protobuf service pomerium.dashboard.SettingsService
 */
export const SettingsService = new ServiceType("pomerium.dashboard.SettingsService", [
    { name: "GetSettings", options: {}, I: GetSettingsRequest, O: GetSettingsResponse },
    { name: "SetSettings", options: {}, I: SetSettingsRequest, O: SetSettingsResponse },
    { name: "GetBrandingSettings", options: {}, I: GetSettingsRequest, O: GetSettingsResponse },
    { name: "GetConsoleSettings", options: {}, I: GetConsoleSettingsRequest, O: GetConsoleSettingsResponse }
]);
