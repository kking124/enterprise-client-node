// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies
// @generated from protobuf file "activity_log.proto" (package "pomerium.dashboard", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * ActivityLogEntry contains context associated with a change in the deployment
 * history
 *
 * @generated from protobuf message pomerium.dashboard.ActivityLogEntry
 */
export interface ActivityLogEntry {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 20;
     */
    name: string;
    /**
     * `DELETE` or `SET`
     *
     * @generated from protobuf field: string activity_type = 2;
     */
    activityType: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 3;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: string namespace_id = 4;
     */
    namespaceId: string;
    /**
     * @generated from protobuf field: string namespace_name = 5;
     */
    namespaceName: string;
    /**
     * @generated from protobuf field: string user_id = 6;
     */
    userId: string;
    /**
     * @generated from protobuf field: string user_name = 7;
     */
    userName: string;
    /**
     * @generated from protobuf field: string user_email = 8;
     */
    userEmail: string;
    /**
     * `route` | `policy` | `settings`
     *
     * @generated from protobuf field: string entity_type = 9;
     */
    entityType: string;
    /**
     * @generated from protobuf field: string entity_id = 10;
     */
    entityId: string;
    /**
     * @generated from protobuf field: string entity_data = 11;
     */
    entityData: string;
    /**
     * @generated from protobuf field: pomerium.dashboard.ActivityLogEntry.DiffSummary diff_summary = 12;
     */
    diffSummary?: ActivityLogEntry_DiffSummary;
    /**
     * databroker version this change synced to
     *
     * @generated from protobuf field: uint64 db_version = 13;
     */
    dbVersion: bigint;
    /**
     * @generated from protobuf field: string session_id = 14;
     */
    sessionId: string;
    /**
     * @generated from protobuf field: string service_account_id = 15;
     */
    serviceAccountId: string;
    /**
     * @generated from protobuf field: string impersonate_user_id = 16;
     */
    impersonateUserId: string;
    /**
     * @generated from protobuf field: string impersonate_user_name = 17;
     */
    impersonateUserName: string;
    /**
     * @generated from protobuf field: string impersonate_user_email = 18;
     */
    impersonateUserEmail: string;
    /**
     * @generated from protobuf field: repeated string impersonate_user_groups = 19;
     */
    impersonateUserGroups: string[];
}
/**
 * @generated from protobuf message pomerium.dashboard.ActivityLogEntry.DiffSummary
 */
export interface ActivityLogEntry_DiffSummary {
    /**
     * number of lines added
     *
     * @generated from protobuf field: int64 added = 1;
     */
    added: bigint;
    /**
     * number of lines removed
     *
     * @generated from protobuf field: int64 removed = 2;
     */
    removed: bigint;
}
/**
 * @generated from protobuf message pomerium.dashboard.GetActivityLogEntryRequest
 */
export interface GetActivityLogEntryRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message pomerium.dashboard.GetActivityLogEntryResponse
 */
export interface GetActivityLogEntryResponse {
    /**
     * @generated from protobuf field: pomerium.dashboard.ActivityLogEntry entry = 1;
     */
    entry?: ActivityLogEntry;
    /**
     * @generated from protobuf field: optional string previous_entry_id = 2;
     */
    previousEntryId?: string;
    /**
     * @generated from protobuf field: optional string next_entry_id = 3;
     */
    nextEntryId?: string;
}
/**
 * ListActivityLogEntriesRequest defines the types of Activity Log entries to
 * list
 *
 * @generated from protobuf message pomerium.dashboard.ListActivityLogEntriesRequest
 */
export interface ListActivityLogEntriesRequest {
    /**
     * `DELETE` | `SET`
     *
     * @generated from protobuf field: optional string activity_type = 1;
     */
    activityType?: string;
    /**
     * @generated from protobuf field: optional string namespace_id = 2;
     */
    namespaceId?: string;
    /**
     * @generated from protobuf field: optional string user_id = 3;
     */
    userId?: string;
    /**
     * `route` | `policy` | `settings`
     *
     * @generated from protobuf field: optional string entity_type = 4;
     */
    entityType?: string;
    /**
     * @generated from protobuf field: optional string entity_id = 5;
     */
    entityId?: string;
    /**
     * `newest` | `oldest` | `from` | `name`
     *
     * @generated from protobuf field: optional string query = 6;
     */
    query?: string;
    /**
     * list entries starting from an offset in the total list
     *
     * @generated from protobuf field: optional int64 offset = 7;
     */
    offset?: bigint;
    /**
     * limit the number of entries returned
     *
     * @generated from protobuf field: optional int64 limit = 8;
     */
    limit?: bigint;
    /**
     * databroker versions of the change
     *
     * @generated from protobuf field: repeated uint64 db_versions = 9;
     */
    dbVersions: bigint[];
    /**
     * if true, show activity for the namespace and any child namespaces
     *
     * @generated from protobuf field: optional bool recurse_namespace = 11;
     */
    recurseNamespace?: boolean;
    /**
     * the entities are a list of entities to retrieve the activity log for
     *
     * @generated from protobuf field: repeated pomerium.dashboard.ListActivityLogEntriesRequest.Entity entities = 10;
     */
    entities: ListActivityLogEntriesRequest_Entity[];
    /**
     * @generated from protobuf field: optional pomerium.dashboard.ListActivityLogEntriesRequest.Sort sort = 12;
     */
    sort?: ListActivityLogEntriesRequest_Sort;
    /**
     * @generated from protobuf field: pomerium.dashboard.ListActivityLogEntriesRequest.DateFilter date_filter = 13;
     */
    dateFilter?: ListActivityLogEntriesRequest_DateFilter;
    /**
     * @generated from protobuf field: pomerium.dashboard.ListActivityLogEntriesRequest.StringFilter string_filter = 14;
     */
    stringFilter?: ListActivityLogEntriesRequest_StringFilter;
}
/**
 * an entity is a single entity (route, policy, etc.)
 *
 * @generated from protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.Entity
 */
export interface ListActivityLogEntriesRequest_Entity {
    /**
     * @generated from protobuf field: string type = 1;
     */
    type: string;
    /**
     * @generated from protobuf field: string id = 2;
     */
    id: string;
}
/**
 * used to sort the db query
 *
 * @generated from protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.Sort
 */
export interface ListActivityLogEntriesRequest_Sort {
    /**
     * `activity_type` | `created_at` | `namespace_name` | `user_name` |
     * `user_email` | `entity_type`
     *
     * @generated from protobuf field: string column = 1;
     */
    column: string;
    /**
     * `ASC` | `DESC`
     *
     * @generated from protobuf field: string direction = 2;
     */
    direction: string;
}
/**
 * filter for dates
 *
 * @generated from protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.DateFilter
 */
export interface ListActivityLogEntriesRequest_DateFilter {
    /**
     * `=` | `!=` | `<` | `<=` | `>` | `>=`
     *
     * @generated from protobuf field: string operator = 1;
     */
    operator: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp date = 2;
     */
    date?: Timestamp;
}
/**
 * filter for strings
 *
 * @generated from protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.StringFilter
 */
export interface ListActivityLogEntriesRequest_StringFilter {
    /**
     * @generated from protobuf field: string fieldName = 1;
     */
    fieldName: string;
    /**
     * `contains` | `equals` | `startsWith` | `endsWith`
     *
     * @generated from protobuf field: string operator = 2;
     */
    operator: string;
    /**
     * @generated from protobuf field: string value = 3;
     */
    value: string;
}
/**
 * ListActivityLogEntriesResponse is a list of Activity Log entries found from a
 * ListActivityLogEntriesRequest
 *
 * @generated from protobuf message pomerium.dashboard.ListActivityLogEntriesResponse
 */
export interface ListActivityLogEntriesResponse {
    /**
     * Activity Log entries
     *
     * @generated from protobuf field: repeated pomerium.dashboard.ActivityLogEntry entries = 1;
     */
    entries: ActivityLogEntry[];
    /**
     * @generated from protobuf field: int64 total_count = 2;
     */
    totalCount: bigint;
}
// @generated message type with reflection information, may provide speed optimized methods
class ActivityLogEntry$Type extends MessageType<ActivityLogEntry> {
    constructor() {
        super("pomerium.dashboard.ActivityLogEntry", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "activity_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "namespace_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "namespace_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "user_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "user_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "user_email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "entity_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "entity_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "entity_data", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "diff_summary", kind: "message", T: () => ActivityLogEntry_DiffSummary },
            { no: 13, name: "db_version", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "service_account_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "impersonate_user_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "impersonate_user_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "impersonate_user_email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "impersonate_user_groups", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ActivityLogEntry>): ActivityLogEntry {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "";
        message.name = "";
        message.activityType = "";
        message.namespaceId = "";
        message.namespaceName = "";
        message.userId = "";
        message.userName = "";
        message.userEmail = "";
        message.entityType = "";
        message.entityId = "";
        message.entityData = "";
        message.dbVersion = 0n;
        message.sessionId = "";
        message.serviceAccountId = "";
        message.impersonateUserId = "";
        message.impersonateUserName = "";
        message.impersonateUserEmail = "";
        message.impersonateUserGroups = [];
        if (value !== undefined)
            reflectionMergePartial<ActivityLogEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ActivityLogEntry): ActivityLogEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string name */ 20:
                    message.name = reader.string();
                    break;
                case /* string activity_type */ 2:
                    message.activityType = reader.string();
                    break;
                case /* google.protobuf.Timestamp created_at */ 3:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* string namespace_id */ 4:
                    message.namespaceId = reader.string();
                    break;
                case /* string namespace_name */ 5:
                    message.namespaceName = reader.string();
                    break;
                case /* string user_id */ 6:
                    message.userId = reader.string();
                    break;
                case /* string user_name */ 7:
                    message.userName = reader.string();
                    break;
                case /* string user_email */ 8:
                    message.userEmail = reader.string();
                    break;
                case /* string entity_type */ 9:
                    message.entityType = reader.string();
                    break;
                case /* string entity_id */ 10:
                    message.entityId = reader.string();
                    break;
                case /* string entity_data */ 11:
                    message.entityData = reader.string();
                    break;
                case /* pomerium.dashboard.ActivityLogEntry.DiffSummary diff_summary */ 12:
                    message.diffSummary = ActivityLogEntry_DiffSummary.internalBinaryRead(reader, reader.uint32(), options, message.diffSummary);
                    break;
                case /* uint64 db_version */ 13:
                    message.dbVersion = reader.uint64().toBigInt();
                    break;
                case /* string session_id */ 14:
                    message.sessionId = reader.string();
                    break;
                case /* string service_account_id */ 15:
                    message.serviceAccountId = reader.string();
                    break;
                case /* string impersonate_user_id */ 16:
                    message.impersonateUserId = reader.string();
                    break;
                case /* string impersonate_user_name */ 17:
                    message.impersonateUserName = reader.string();
                    break;
                case /* string impersonate_user_email */ 18:
                    message.impersonateUserEmail = reader.string();
                    break;
                case /* repeated string impersonate_user_groups */ 19:
                    message.impersonateUserGroups.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ActivityLogEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string name = 20; */
        if (message.name !== "")
            writer.tag(20, WireType.LengthDelimited).string(message.name);
        /* string activity_type = 2; */
        if (message.activityType !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.activityType);
        /* google.protobuf.Timestamp created_at = 3; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string namespace_id = 4; */
        if (message.namespaceId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.namespaceId);
        /* string namespace_name = 5; */
        if (message.namespaceName !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.namespaceName);
        /* string user_id = 6; */
        if (message.userId !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.userId);
        /* string user_name = 7; */
        if (message.userName !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.userName);
        /* string user_email = 8; */
        if (message.userEmail !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.userEmail);
        /* string entity_type = 9; */
        if (message.entityType !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.entityType);
        /* string entity_id = 10; */
        if (message.entityId !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.entityId);
        /* string entity_data = 11; */
        if (message.entityData !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.entityData);
        /* pomerium.dashboard.ActivityLogEntry.DiffSummary diff_summary = 12; */
        if (message.diffSummary)
            ActivityLogEntry_DiffSummary.internalBinaryWrite(message.diffSummary, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* uint64 db_version = 13; */
        if (message.dbVersion !== 0n)
            writer.tag(13, WireType.Varint).uint64(message.dbVersion);
        /* string session_id = 14; */
        if (message.sessionId !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.sessionId);
        /* string service_account_id = 15; */
        if (message.serviceAccountId !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.serviceAccountId);
        /* string impersonate_user_id = 16; */
        if (message.impersonateUserId !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.impersonateUserId);
        /* string impersonate_user_name = 17; */
        if (message.impersonateUserName !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.impersonateUserName);
        /* string impersonate_user_email = 18; */
        if (message.impersonateUserEmail !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.impersonateUserEmail);
        /* repeated string impersonate_user_groups = 19; */
        for (let i = 0; i < message.impersonateUserGroups.length; i++)
            writer.tag(19, WireType.LengthDelimited).string(message.impersonateUserGroups[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ActivityLogEntry
 */
export const ActivityLogEntry = new ActivityLogEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ActivityLogEntry_DiffSummary$Type extends MessageType<ActivityLogEntry_DiffSummary> {
    constructor() {
        super("pomerium.dashboard.ActivityLogEntry.DiffSummary", [
            { no: 1, name: "added", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "removed", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ActivityLogEntry_DiffSummary>): ActivityLogEntry_DiffSummary {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.added = 0n;
        message.removed = 0n;
        if (value !== undefined)
            reflectionMergePartial<ActivityLogEntry_DiffSummary>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ActivityLogEntry_DiffSummary): ActivityLogEntry_DiffSummary {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 added */ 1:
                    message.added = reader.int64().toBigInt();
                    break;
                case /* int64 removed */ 2:
                    message.removed = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ActivityLogEntry_DiffSummary, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 added = 1; */
        if (message.added !== 0n)
            writer.tag(1, WireType.Varint).int64(message.added);
        /* int64 removed = 2; */
        if (message.removed !== 0n)
            writer.tag(2, WireType.Varint).int64(message.removed);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ActivityLogEntry.DiffSummary
 */
export const ActivityLogEntry_DiffSummary = new ActivityLogEntry_DiffSummary$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetActivityLogEntryRequest$Type extends MessageType<GetActivityLogEntryRequest> {
    constructor() {
        super("pomerium.dashboard.GetActivityLogEntryRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetActivityLogEntryRequest>): GetActivityLogEntryRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "";
        if (value !== undefined)
            reflectionMergePartial<GetActivityLogEntryRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetActivityLogEntryRequest): GetActivityLogEntryRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetActivityLogEntryRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetActivityLogEntryRequest
 */
export const GetActivityLogEntryRequest = new GetActivityLogEntryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetActivityLogEntryResponse$Type extends MessageType<GetActivityLogEntryResponse> {
    constructor() {
        super("pomerium.dashboard.GetActivityLogEntryResponse", [
            { no: 1, name: "entry", kind: "message", T: () => ActivityLogEntry },
            { no: 2, name: "previous_entry_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "next_entry_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetActivityLogEntryResponse>): GetActivityLogEntryResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetActivityLogEntryResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetActivityLogEntryResponse): GetActivityLogEntryResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* pomerium.dashboard.ActivityLogEntry entry */ 1:
                    message.entry = ActivityLogEntry.internalBinaryRead(reader, reader.uint32(), options, message.entry);
                    break;
                case /* optional string previous_entry_id */ 2:
                    message.previousEntryId = reader.string();
                    break;
                case /* optional string next_entry_id */ 3:
                    message.nextEntryId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetActivityLogEntryResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* pomerium.dashboard.ActivityLogEntry entry = 1; */
        if (message.entry)
            ActivityLogEntry.internalBinaryWrite(message.entry, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional string previous_entry_id = 2; */
        if (message.previousEntryId !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.previousEntryId);
        /* optional string next_entry_id = 3; */
        if (message.nextEntryId !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.nextEntryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.GetActivityLogEntryResponse
 */
export const GetActivityLogEntryResponse = new GetActivityLogEntryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListActivityLogEntriesRequest$Type extends MessageType<ListActivityLogEntriesRequest> {
    constructor() {
        super("pomerium.dashboard.ListActivityLogEntriesRequest", [
            { no: 1, name: "activity_type", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "namespace_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "user_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "entity_type", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "entity_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "query", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "offset", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "limit", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "db_versions", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "recurse_namespace", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "entities", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ListActivityLogEntriesRequest_Entity },
            { no: 12, name: "sort", kind: "message", T: () => ListActivityLogEntriesRequest_Sort },
            { no: 13, name: "date_filter", kind: "message", T: () => ListActivityLogEntriesRequest_DateFilter },
            { no: 14, name: "string_filter", kind: "message", T: () => ListActivityLogEntriesRequest_StringFilter }
        ]);
    }
    create(value?: PartialMessage<ListActivityLogEntriesRequest>): ListActivityLogEntriesRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.dbVersions = [];
        message.entities = [];
        if (value !== undefined)
            reflectionMergePartial<ListActivityLogEntriesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListActivityLogEntriesRequest): ListActivityLogEntriesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string activity_type */ 1:
                    message.activityType = reader.string();
                    break;
                case /* optional string namespace_id */ 2:
                    message.namespaceId = reader.string();
                    break;
                case /* optional string user_id */ 3:
                    message.userId = reader.string();
                    break;
                case /* optional string entity_type */ 4:
                    message.entityType = reader.string();
                    break;
                case /* optional string entity_id */ 5:
                    message.entityId = reader.string();
                    break;
                case /* optional string query */ 6:
                    message.query = reader.string();
                    break;
                case /* optional int64 offset */ 7:
                    message.offset = reader.int64().toBigInt();
                    break;
                case /* optional int64 limit */ 8:
                    message.limit = reader.int64().toBigInt();
                    break;
                case /* repeated uint64 db_versions */ 9:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.dbVersions.push(reader.uint64().toBigInt());
                    else
                        message.dbVersions.push(reader.uint64().toBigInt());
                    break;
                case /* optional bool recurse_namespace */ 11:
                    message.recurseNamespace = reader.bool();
                    break;
                case /* repeated pomerium.dashboard.ListActivityLogEntriesRequest.Entity entities */ 10:
                    message.entities.push(ListActivityLogEntriesRequest_Entity.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional pomerium.dashboard.ListActivityLogEntriesRequest.Sort sort */ 12:
                    message.sort = ListActivityLogEntriesRequest_Sort.internalBinaryRead(reader, reader.uint32(), options, message.sort);
                    break;
                case /* pomerium.dashboard.ListActivityLogEntriesRequest.DateFilter date_filter */ 13:
                    message.dateFilter = ListActivityLogEntriesRequest_DateFilter.internalBinaryRead(reader, reader.uint32(), options, message.dateFilter);
                    break;
                case /* pomerium.dashboard.ListActivityLogEntriesRequest.StringFilter string_filter */ 14:
                    message.stringFilter = ListActivityLogEntriesRequest_StringFilter.internalBinaryRead(reader, reader.uint32(), options, message.stringFilter);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListActivityLogEntriesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string activity_type = 1; */
        if (message.activityType !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.activityType);
        /* optional string namespace_id = 2; */
        if (message.namespaceId !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.namespaceId);
        /* optional string user_id = 3; */
        if (message.userId !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.userId);
        /* optional string entity_type = 4; */
        if (message.entityType !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.entityType);
        /* optional string entity_id = 5; */
        if (message.entityId !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.entityId);
        /* optional string query = 6; */
        if (message.query !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.query);
        /* optional int64 offset = 7; */
        if (message.offset !== undefined)
            writer.tag(7, WireType.Varint).int64(message.offset);
        /* optional int64 limit = 8; */
        if (message.limit !== undefined)
            writer.tag(8, WireType.Varint).int64(message.limit);
        /* repeated uint64 db_versions = 9; */
        if (message.dbVersions.length) {
            writer.tag(9, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.dbVersions.length; i++)
                writer.uint64(message.dbVersions[i]);
            writer.join();
        }
        /* optional bool recurse_namespace = 11; */
        if (message.recurseNamespace !== undefined)
            writer.tag(11, WireType.Varint).bool(message.recurseNamespace);
        /* repeated pomerium.dashboard.ListActivityLogEntriesRequest.Entity entities = 10; */
        for (let i = 0; i < message.entities.length; i++)
            ListActivityLogEntriesRequest_Entity.internalBinaryWrite(message.entities[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional pomerium.dashboard.ListActivityLogEntriesRequest.Sort sort = 12; */
        if (message.sort)
            ListActivityLogEntriesRequest_Sort.internalBinaryWrite(message.sort, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* pomerium.dashboard.ListActivityLogEntriesRequest.DateFilter date_filter = 13; */
        if (message.dateFilter)
            ListActivityLogEntriesRequest_DateFilter.internalBinaryWrite(message.dateFilter, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* pomerium.dashboard.ListActivityLogEntriesRequest.StringFilter string_filter = 14; */
        if (message.stringFilter)
            ListActivityLogEntriesRequest_StringFilter.internalBinaryWrite(message.stringFilter, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListActivityLogEntriesRequest
 */
export const ListActivityLogEntriesRequest = new ListActivityLogEntriesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListActivityLogEntriesRequest_Entity$Type extends MessageType<ListActivityLogEntriesRequest_Entity> {
    constructor() {
        super("pomerium.dashboard.ListActivityLogEntriesRequest.Entity", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListActivityLogEntriesRequest_Entity>): ListActivityLogEntriesRequest_Entity {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.type = "";
        message.id = "";
        if (value !== undefined)
            reflectionMergePartial<ListActivityLogEntriesRequest_Entity>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListActivityLogEntriesRequest_Entity): ListActivityLogEntriesRequest_Entity {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string type */ 1:
                    message.type = reader.string();
                    break;
                case /* string id */ 2:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListActivityLogEntriesRequest_Entity, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string type = 1; */
        if (message.type !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.type);
        /* string id = 2; */
        if (message.id !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.Entity
 */
export const ListActivityLogEntriesRequest_Entity = new ListActivityLogEntriesRequest_Entity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListActivityLogEntriesRequest_Sort$Type extends MessageType<ListActivityLogEntriesRequest_Sort> {
    constructor() {
        super("pomerium.dashboard.ListActivityLogEntriesRequest.Sort", [
            { no: 1, name: "column", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "direction", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListActivityLogEntriesRequest_Sort>): ListActivityLogEntriesRequest_Sort {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.column = "";
        message.direction = "";
        if (value !== undefined)
            reflectionMergePartial<ListActivityLogEntriesRequest_Sort>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListActivityLogEntriesRequest_Sort): ListActivityLogEntriesRequest_Sort {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string column */ 1:
                    message.column = reader.string();
                    break;
                case /* string direction */ 2:
                    message.direction = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListActivityLogEntriesRequest_Sort, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string column = 1; */
        if (message.column !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.column);
        /* string direction = 2; */
        if (message.direction !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.direction);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.Sort
 */
export const ListActivityLogEntriesRequest_Sort = new ListActivityLogEntriesRequest_Sort$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListActivityLogEntriesRequest_DateFilter$Type extends MessageType<ListActivityLogEntriesRequest_DateFilter> {
    constructor() {
        super("pomerium.dashboard.ListActivityLogEntriesRequest.DateFilter", [
            { no: 1, name: "operator", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "date", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<ListActivityLogEntriesRequest_DateFilter>): ListActivityLogEntriesRequest_DateFilter {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.operator = "";
        if (value !== undefined)
            reflectionMergePartial<ListActivityLogEntriesRequest_DateFilter>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListActivityLogEntriesRequest_DateFilter): ListActivityLogEntriesRequest_DateFilter {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string operator */ 1:
                    message.operator = reader.string();
                    break;
                case /* google.protobuf.Timestamp date */ 2:
                    message.date = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.date);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListActivityLogEntriesRequest_DateFilter, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string operator = 1; */
        if (message.operator !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.operator);
        /* google.protobuf.Timestamp date = 2; */
        if (message.date)
            Timestamp.internalBinaryWrite(message.date, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.DateFilter
 */
export const ListActivityLogEntriesRequest_DateFilter = new ListActivityLogEntriesRequest_DateFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListActivityLogEntriesRequest_StringFilter$Type extends MessageType<ListActivityLogEntriesRequest_StringFilter> {
    constructor() {
        super("pomerium.dashboard.ListActivityLogEntriesRequest.StringFilter", [
            { no: 1, name: "fieldName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "operator", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListActivityLogEntriesRequest_StringFilter>): ListActivityLogEntriesRequest_StringFilter {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.fieldName = "";
        message.operator = "";
        message.value = "";
        if (value !== undefined)
            reflectionMergePartial<ListActivityLogEntriesRequest_StringFilter>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListActivityLogEntriesRequest_StringFilter): ListActivityLogEntriesRequest_StringFilter {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string fieldName */ 1:
                    message.fieldName = reader.string();
                    break;
                case /* string operator */ 2:
                    message.operator = reader.string();
                    break;
                case /* string value */ 3:
                    message.value = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListActivityLogEntriesRequest_StringFilter, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string fieldName = 1; */
        if (message.fieldName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fieldName);
        /* string operator = 2; */
        if (message.operator !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.operator);
        /* string value = 3; */
        if (message.value !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListActivityLogEntriesRequest.StringFilter
 */
export const ListActivityLogEntriesRequest_StringFilter = new ListActivityLogEntriesRequest_StringFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListActivityLogEntriesResponse$Type extends MessageType<ListActivityLogEntriesResponse> {
    constructor() {
        super("pomerium.dashboard.ListActivityLogEntriesResponse", [
            { no: 1, name: "entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ActivityLogEntry },
            { no: 2, name: "total_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ListActivityLogEntriesResponse>): ListActivityLogEntriesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.entries = [];
        message.totalCount = 0n;
        if (value !== undefined)
            reflectionMergePartial<ListActivityLogEntriesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListActivityLogEntriesResponse): ListActivityLogEntriesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated pomerium.dashboard.ActivityLogEntry entries */ 1:
                    message.entries.push(ActivityLogEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 total_count */ 2:
                    message.totalCount = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListActivityLogEntriesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated pomerium.dashboard.ActivityLogEntry entries = 1; */
        for (let i = 0; i < message.entries.length; i++)
            ActivityLogEntry.internalBinaryWrite(message.entries[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 total_count = 2; */
        if (message.totalCount !== 0n)
            writer.tag(2, WireType.Varint).int64(message.totalCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pomerium.dashboard.ListActivityLogEntriesResponse
 */
export const ListActivityLogEntriesResponse = new ListActivityLogEntriesResponse$Type();
/**
 * @generated ServiceType for protobuf service pomerium.dashboard.ActivityLogService
 */
export const ActivityLogService = new ServiceType("pomerium.dashboard.ActivityLogService", [
    { name: "GetActivityLogEntry", options: {}, I: GetActivityLogEntryRequest, O: GetActivityLogEntryResponse },
    { name: "ListActivityLogEntries", options: {}, I: ListActivityLogEntriesRequest, O: ListActivityLogEntriesResponse }
]);
