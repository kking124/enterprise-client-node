// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies
// @generated from protobuf file "xds/core/v3/collection_entry.proto" (package "xds.core.v3", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
import { ResourceLocator } from "./resource_locator";
/**
 * xDS collection resource wrapper. This encapsulates a xDS resource when
 * appearing inside a list collection resource. List collection resources are
 * regular Resource messages of type:
 *
 * .. code-block:: proto
 *
 *   message <T>Collection {
 *     repeated CollectionEntry resources = 1;
 *   }
 *
 *
 * @generated from protobuf message xds.core.v3.CollectionEntry
 */
export interface CollectionEntry {
    /**
     * @generated from protobuf oneof: resource_specifier
     */
    resourceSpecifier: {
        oneofKind: "locator";
        /**
         * A resource locator describing how the member resource is to be located.
         *
         * @generated from protobuf field: xds.core.v3.ResourceLocator locator = 1;
         */
        locator: ResourceLocator;
    } | {
        oneofKind: "inlineEntry";
        /**
         * The resource is inlined in the list collection.
         *
         * @generated from protobuf field: xds.core.v3.CollectionEntry.InlineEntry inline_entry = 2;
         */
        inlineEntry: CollectionEntry_InlineEntry;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Inlined resource entry.
 *
 * @generated from protobuf message xds.core.v3.CollectionEntry.InlineEntry
 */
export interface CollectionEntry_InlineEntry {
    /**
     * Optional name to describe the inlined resource. Resource names must match
     * ``[a-zA-Z0-9_-\./]+`` (TODO(htuch): turn this into a PGV constraint once
     * finalized, probably should be a RFC3986 pchar). This name allows
     * reference via the #entry directive in ResourceLocator.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The resource's logical version. It is illegal to have the same named xDS
     * resource name at a given version with different resource payloads.
     *
     * @generated from protobuf field: string version = 2;
     */
    version: string;
    /**
     * The resource payload, including type URL.
     *
     * @generated from protobuf field: google.protobuf.Any resource = 3;
     */
    resource?: Any;
}
// @generated message type with reflection information, may provide speed optimized methods
class CollectionEntry$Type extends MessageType<CollectionEntry> {
    constructor() {
        super("xds.core.v3.CollectionEntry", [
            { no: 1, name: "locator", kind: "message", oneof: "resourceSpecifier", T: () => ResourceLocator },
            { no: 2, name: "inline_entry", kind: "message", oneof: "resourceSpecifier", T: () => CollectionEntry_InlineEntry }
        ]);
    }
    create(value?: PartialMessage<CollectionEntry>): CollectionEntry {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceSpecifier = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<CollectionEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CollectionEntry): CollectionEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* xds.core.v3.ResourceLocator locator */ 1:
                    message.resourceSpecifier = {
                        oneofKind: "locator",
                        locator: ResourceLocator.internalBinaryRead(reader, reader.uint32(), options, (message.resourceSpecifier as any).locator)
                    };
                    break;
                case /* xds.core.v3.CollectionEntry.InlineEntry inline_entry */ 2:
                    message.resourceSpecifier = {
                        oneofKind: "inlineEntry",
                        inlineEntry: CollectionEntry_InlineEntry.internalBinaryRead(reader, reader.uint32(), options, (message.resourceSpecifier as any).inlineEntry)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CollectionEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* xds.core.v3.ResourceLocator locator = 1; */
        if (message.resourceSpecifier.oneofKind === "locator")
            ResourceLocator.internalBinaryWrite(message.resourceSpecifier.locator, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* xds.core.v3.CollectionEntry.InlineEntry inline_entry = 2; */
        if (message.resourceSpecifier.oneofKind === "inlineEntry")
            CollectionEntry_InlineEntry.internalBinaryWrite(message.resourceSpecifier.inlineEntry, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message xds.core.v3.CollectionEntry
 */
export const CollectionEntry = new CollectionEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CollectionEntry_InlineEntry$Type extends MessageType<CollectionEntry_InlineEntry> {
    constructor() {
        super("xds.core.v3.CollectionEntry.InlineEntry", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { pattern: "^[0-9a-zA-Z_\\-\\.~:]+$" } } } },
            { no: 2, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "resource", kind: "message", T: () => Any }
        ]);
    }
    create(value?: PartialMessage<CollectionEntry_InlineEntry>): CollectionEntry_InlineEntry {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        message.version = "";
        if (value !== undefined)
            reflectionMergePartial<CollectionEntry_InlineEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CollectionEntry_InlineEntry): CollectionEntry_InlineEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string version */ 2:
                    message.version = reader.string();
                    break;
                case /* google.protobuf.Any resource */ 3:
                    message.resource = Any.internalBinaryRead(reader, reader.uint32(), options, message.resource);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CollectionEntry_InlineEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string version = 2; */
        if (message.version !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.version);
        /* google.protobuf.Any resource = 3; */
        if (message.resource)
            Any.internalBinaryWrite(message.resource, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message xds.core.v3.CollectionEntry.InlineEntry
 */
export const CollectionEntry_InlineEntry = new CollectionEntry_InlineEntry$Type();
